{"version":3,"file":"static/js/436.95bd228e.chunk.js","mappings":"8RAQA,MAAMA,GAAQC,EAAAA,EAAAA,GAAY,CACxBC,QAAS,CACPC,KAAM,UAIJC,EAAQC,EAAAA,YAAiB,SAAeC,EAAOC,GACnD,OAAOC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAACC,UAAW,EAAGH,IAAKA,EAAKI,QAAQ,YAAaL,GAChE,IAsNA,UApNaM,KACX,MAAOC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,KAC5CC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,CAAEG,KAAM,GAAIC,GAAI,KAAMC,UAAW,MAC3DC,EAAOC,IAAYP,EAAAA,EAAAA,UAAS,KAC5BQ,EAAWC,IAAgBT,EAAAA,EAAAA,WAAS,IACpCU,EAAaC,IAAkBX,EAAAA,EAAAA,WAAS,IACxCY,EAAaC,IAAkBb,EAAAA,EAAAA,UAAS,KACxCc,EAAeC,IAAoBf,EAAAA,EAAAA,UAAS,KAEnDgB,EAAAA,EAAAA,YAAU,KACRC,SAASX,MAAQ,2BAA2B,GAC3C,KAEHU,EAAAA,EAAAA,YAAU,KACUE,WAChB,MAAMC,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,UAGlD,GAFqD,OAAlCD,aAAaC,QAAQ,SAGtC,IACE,MAAMC,QAAkBC,MAAO,uDAAsDN,EAAUf,KAAM,CACnGsB,QAAS,CACPC,cAAe,UAAYP,KAAKC,MAAMC,aAAaC,QAAQ,UAAUK,aACrE,YAAaR,KAAKC,MAAMC,aAAaC,QAAQ,UAAUM,aAIrDC,QAAcN,EAAUO,OAE9B,GAAIP,EAAUQ,IAAMF,EAAMG,KAAKC,OAAS,EAAG,CACzC,MAAMC,EAAcL,EAAMG,KAAK,GAC/B/B,EAAQ,CACNC,KAAMgC,EAAYC,UAAUF,OAASC,EAAYC,UAAY,OAC7DhC,GAAI+B,EAAYE,QAAQH,OAASC,EAAYE,QAAU,EACvDhC,UAAW,KAEbE,EAAS4B,EAAY7B,MACvB,CAGF,CAFE,MAAOgC,GACPC,QAAQD,MAAMA,EAChB,CACF,EAGFE,EAAW,GACV,IAEH,MAAMC,EAAYA,KAChBhC,GAAa,EAAK,EAGdiC,EAAaA,CAACC,EAAOC,KACV,cAAXA,GAIJnC,GAAa,EAAM,EAOfoC,EAAeA,CAACF,EAAOC,KACZ,cAAXA,GAIJjC,GAAe,EAAM,EAuEvB,OACEmC,EAAAA,EAAAA,MAACC,EAAAA,EAAQ,CAACzC,MAAM,YAAY0C,YAAY,2DAA0DC,SAAA,EAChGH,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEH,SAAA,EACzBxD,EAAAA,EAAAA,KAACyD,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEN,UACvBxD,EAAAA,EAAAA,KAAC+D,EAAAA,EAAa,CAACvE,MAAOA,EAAMgE,UAC1BxD,EAAAA,EAAAA,KAACgE,EAAAA,EAAS,CACRC,WAAS,EACTtD,GAAG,iBACHuD,MAAM,QACN/D,QAAQ,WACRgE,MAAOtD,EACPuD,SAAWC,GAAMvD,EAASuD,EAAEC,OAAOH,OACnCI,WAAS,SAIfvE,EAAAA,EAAAA,KAACyD,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEN,UACvBxD,EAAAA,EAAAA,KAAC+D,EAAAA,EAAa,CAACvE,MAAOA,EAAMgE,UAC1BxD,EAAAA,EAAAA,KAACwE,EAAAA,EAAY,CACXL,MAAO3D,EACPiE,QAASpE,EACTqE,eAAiBC,GACRA,EAAOjE,KAEhB0D,SAAUA,CAAClB,EAAOiB,KAChB1D,EAAa,OAAL0D,QAAK,IAALA,EAAAA,EAAS,CAAEzD,KAAM,GAAIC,GAAI,KAAMC,UAAW,IAAK,EAEzDgE,qBAAsBA,CAACD,EAAQR,IAAUQ,EAAOhE,KAAOwD,EAAMxD,GAC7DkE,YAAcC,IACZ9E,EAAAA,EAAAA,KAACgE,EAAAA,EAAS,IACJc,EACJb,WAAS,EACTtD,GAAG,iBACHuD,MAAM,OACN/D,QAAQ,WACRiE,SAAWlB,IAlEAzB,WACzB,IAAKI,aAAaC,QAAQ,SACxB,OAAOxB,EAAiB,IAG1B,GAAqB,KAAjB6D,EAAMY,OAAe,CACvB,MAAMC,QAAiBhD,MAAO,uDAAsDiD,mBAAmBd,cAAmB,CACxHlC,QAAS,CACPC,cAAe,UAAYP,KAAKC,MAAMC,aAAaC,QAAQ,UAAUK,aACrE,YAAaR,KAAKC,MAAMC,aAAaC,QAAQ,UAAUM,aAIrDI,QAAawC,EAAS1C,OAExB0C,EAASzC,GACXjC,EACEkC,EAAKA,KAAK0C,KAAKC,IAAQ,CACrBzE,KAAMyE,EAASzE,KACfC,GAAIwE,EAASxE,GACbC,UAAWuE,EAASC,YAAYC,QAAQ,MAAO,YAInD/E,EAAiB,GAErB,MACEA,EAAiB,GACnB,EAuCgBgF,CAAmBpC,EAAMoB,OAAOH,MAAM,IAI5CoB,aAAcA,CAACzF,EAAO6E,KACpB3E,EAAAA,EAAAA,KAAA,SAAQF,EAAK0D,UACXH,EAAAA,EAAAA,MAACmC,EAAAA,EAAG,CAACC,QAAQ,OAAOC,WAAW,SAAQlC,SAAA,EACrCxD,EAAAA,EAAAA,KAAC2F,EAAAA,EAAM,CAACxF,QAAQ,SAASyF,IAAKjB,EAAO/D,UAAWiF,IAAKlB,EAAOjE,KAAMoF,GAAI,CAAEC,MAAO,GAAIC,OAAQ,GAAIC,YAAa,KAC3GtB,EAAOjE,iBAOpBV,EAAAA,EAAAA,KAACyD,EAAAA,GAAI,CAACG,MAAI,EAAAJ,UACRxD,EAAAA,EAAAA,KAACkG,EAAAA,EAAM,CAAC/F,QAAQ,OAAO8D,WAAS,EAACkC,QAxHhB1E,UACvB,MAAMC,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,UAClD,IAAKJ,EAGH,OAFAN,EAAe,yDACf4B,IAIF,MAAMoD,EAAgBnB,mBAAmBvD,EAAUf,IAEnD,IAAK,IAAD0F,EACF,MAAMrB,QAAiBhD,MAAO,uDAAsDoE,IAAiB,CACnGE,OAAQ,QACRrE,QAAS,CACPC,cAAe,UAAYR,EAAUS,aACrC,YAAaT,EAAUU,UACvB,eAAgB,oBAElBmE,KAAM5E,KAAK6E,UAAU,CACnB5D,QAAgB,QAATyD,EAAE7F,EAAKG,UAAE,IAAA0F,EAAAA,EAAI,EACpBxF,MAAOA,EAAM4B,OAAS5B,EAAQ,QAIlC,GAAKmE,EAASzC,GAKZjB,EAAiB,2CAxCrBJ,GAAe,OAmCK,CAChB,MAAMsB,QAAawC,EAAS1C,OAC5BlB,EAAeoB,EAAKiE,SACpBzD,GACF,CAMF,CAFE,MAAOH,GACPC,QAAQD,MAAMA,EAChB,GAsFiEW,SAAC,iBAMhExD,EAAAA,EAAAA,KAAC0G,EAAAA,EAAQ,CAACC,KAAM5F,EAAW6F,iBAAkB,KAAMC,QAAS5D,EAAWO,UACrExD,EAAAA,EAAAA,KAACJ,EAAK,CAACiH,QAAS5D,EAAY6D,SAAS,QAAQhB,GAAI,CAAEC,MAAO,QAASvC,SAChErC,OAILnB,EAAAA,EAAAA,KAAC0G,EAAAA,EAAQ,CAACC,KAAM1F,EAAa2F,iBAAkB,KAAMC,QAASzD,EAAaI,UACzExD,EAAAA,EAAAA,KAACJ,EAAK,CAACiH,QAASzD,EAAc0D,SAAS,UAAUhB,GAAI,CAAEC,MAAO,QAASvC,SACpEnC,QAGI,C,mLChOR,SAAS0F,EAAqBC,GACnC,OAAOC,EAAAA,EAAAA,GAAqB,WAAYD,EAC1C,CAEA,OADqBE,EAAAA,EAAAA,GAAuB,WAAY,CAAC,OAAQ,SAAU,OAAQ,UAAW,SAAU,gBAAiB,aAAc,gBAAiB,cAAe,WAAY,kBAAmB,eAAgB,kBAAmB,gBAAiB,WAAY,kBAAmB,eAAgB,kBAAmB,kB,6BCE5T,GAAeC,EAAAA,EAAAA,IAA4BnH,EAAAA,EAAAA,KAAK,OAAQ,CACtDoH,EAAG,8OACD,mBCFJ,GAAeD,EAAAA,EAAAA,IAA4BnH,EAAAA,EAAAA,KAAK,OAAQ,CACtDoH,EAAG,qFACD,yBCFJ,GAAeD,EAAAA,EAAAA,IAA4BnH,EAAAA,EAAAA,KAAK,OAAQ,CACtDoH,EAAG,4KACD,gBCFJ,GAAeD,EAAAA,EAAAA,IAA4BnH,EAAAA,EAAAA,KAAK,OAAQ,CACtDoH,EAAG,8MACD,gB,UCPJ,MAAMC,EAAY,CAAC,SAAU,WAAY,YAAa,YAAa,QAAS,aAAc,kBAAmB,OAAQ,cAAe,UAAW,OAAQ,WAAY,YAAa,QAAS,WAkCnLC,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,EAAO,CAC9B9G,KAAM,WACNsG,KAAM,OACNS,kBAAmBA,CAAC3H,EAAO4H,KACzB,MAAM,WACJC,GACE7H,EACJ,MAAO,CAAC4H,EAAOE,KAAMF,EAAOC,EAAWxH,SAAUuH,EAAQ,GAAEC,EAAWxH,WAAU0H,EAAAA,EAAAA,GAAWF,EAAWG,OAASH,EAAWb,aAAa,GAPzHS,EASfQ,IAGG,IAHF,MACFvI,EAAK,WACLmI,GACDI,EACC,MAAMC,EAAkC,UAAvBxI,EAAME,QAAQC,KAAmBsI,EAAAA,GAASC,EAAAA,GACrDC,EAA4C,UAAvB3I,EAAME,QAAQC,KAAmBuI,EAAAA,GAAUD,EAAAA,GAChEH,EAAQH,EAAWG,OAASH,EAAWb,SAC7C,OAAOsB,EAAAA,EAAAA,GAAS,CAAC,EAAG5I,EAAM6I,WAAWC,MAAO,CAC1CC,gBAAiB,cACjB9C,QAAS,OACT+C,QAAS,YACRV,GAAgC,aAAvBH,EAAWxH,SAA0B,CAC/C2H,MAAOtI,EAAMiJ,KAAOjJ,EAAMiJ,KAAK/I,QAAQE,MAAO,GAAEkI,UAAgBE,EAASxI,EAAME,QAAQoI,GAAOY,MAAO,IACrGH,gBAAiB/I,EAAMiJ,KAAOjJ,EAAMiJ,KAAK/I,QAAQE,MAAO,GAAEkI,eAAqBK,EAAmB3I,EAAME,QAAQoI,GAAOY,MAAO,IAC9H,CAAE,MAAKC,EAAAA,QAAsBnJ,EAAMiJ,KAAO,CACxCX,MAAOtI,EAAMiJ,KAAK/I,QAAQE,MAAO,GAAEkI,eACjC,CACFA,MAAOtI,EAAME,QAAQoI,GAAOc,OAE7Bd,GAAgC,aAAvBH,EAAWxH,SAA0B,CAC/C2H,MAAOtI,EAAMiJ,KAAOjJ,EAAMiJ,KAAK/I,QAAQE,MAAO,GAAEkI,UAAgBE,EAASxI,EAAME,QAAQoI,GAAOY,MAAO,IACrGG,OAAS,cAAarJ,EAAMiJ,MAAQjJ,GAAOE,QAAQoI,GAAOY,QAC1D,CAAE,MAAKC,EAAAA,QAAsBnJ,EAAMiJ,KAAO,CACxCX,MAAOtI,EAAMiJ,KAAK/I,QAAQE,MAAO,GAAEkI,eACjC,CACFA,MAAOtI,EAAME,QAAQoI,GAAOc,OAE7Bd,GAAgC,WAAvBH,EAAWxH,UAAwBiI,EAAAA,EAAAA,GAAS,CACtDU,WAAYtJ,EAAM6I,WAAWU,kBAC5BvJ,EAAMiJ,KAAO,CACdX,MAAOtI,EAAMiJ,KAAK/I,QAAQE,MAAO,GAAEkI,gBACnCS,gBAAiB/I,EAAMiJ,KAAK/I,QAAQE,MAAO,GAAEkI,cAC3C,CACFS,gBAAwC,SAAvB/I,EAAME,QAAQC,KAAkBH,EAAME,QAAQoI,GAAOkB,KAAOxJ,EAAME,QAAQoI,GAAOc,KAClGd,MAAOtI,EAAME,QAAQuJ,gBAAgBzJ,EAAME,QAAQoI,GAAOc,QACzD,IAECM,GAAY3B,EAAAA,EAAAA,IAAO,MAAO,CAC9B7G,KAAM,WACNsG,KAAM,OACNS,kBAAmBA,CAAC3H,EAAO4H,IAAWA,EAAOyB,MAH7B5B,CAIf,CACDtB,YAAa,GACbuC,QAAS,QACT/C,QAAS,OACT2D,SAAU,GACVC,QAAS,KAELC,GAAe/B,EAAAA,EAAAA,IAAO,MAAO,CACjC7G,KAAM,WACNsG,KAAM,UACNS,kBAAmBA,CAAC3H,EAAO4H,IAAWA,EAAOjB,SAH1Bc,CAIlB,CACDiB,QAAS,QACTe,SAAU,EACVC,SAAU,SAENC,GAAclC,EAAAA,EAAAA,IAAO,MAAO,CAChC7G,KAAM,WACNsG,KAAM,SACNS,kBAAmBA,CAAC3H,EAAO4H,IAAWA,EAAOgC,QAH3BnC,CAIjB,CACD9B,QAAS,OACTC,WAAY,aACZ8C,QAAS,eACTmB,WAAY,OACZ1D,aAAc,IAEV2D,EAAqB,CACzBC,SAAsB7J,EAAAA,EAAAA,KAAK8J,EAAqB,CAC9CV,SAAU,YAEZW,SAAsB/J,EAAAA,EAAAA,KAAKgK,EAA2B,CACpDZ,SAAU,YAEZvG,OAAoB7C,EAAAA,EAAAA,KAAKiK,EAAkB,CACzCb,SAAU,YAEZc,MAAmBlK,EAAAA,EAAAA,KAAKmK,EAAkB,CACxCf,SAAU,aAuMd,MApM2BvJ,EAAAA,YAAiB,SAAeuK,EAASrK,GAClE,IAAIsK,EAAMC,EAAoBC,EAAOC,EAAkBC,EAAuBC,EAC9E,MAAM5K,GAAQ6K,EAAAA,EAAAA,GAAc,CAC1B7K,MAAOsK,EACP1J,KAAM,cAEF,OACFgJ,EAAM,SACNlG,EAAQ,UACRoH,EAAS,UACTC,EAAY,QAAO,MACnB/C,EAAK,WACLgD,EAAa,CAAC,EAAC,gBACfC,EAAkB,CAAC,EAAC,KACpB5B,EAAI,YACJ6B,EAAcpB,EAAkB,QAChC/C,EAAO,KACPoE,EAAO,QAAO,SACdnE,EAAW,UAAS,UACpBoE,EAAY,CAAC,EAAC,MACdC,EAAQ,CAAC,EAAC,QACVhL,EAAU,YACRL,EACJsL,GAAQC,EAAAA,EAAAA,GAA8BvL,EAAOuH,GACzCM,GAAaS,EAAAA,EAAAA,GAAS,CAAC,EAAGtI,EAAO,CACrCgI,QACAhB,WACA3G,YAEImL,EAvIkB3D,KACxB,MAAM,QACJxH,EAAO,MACP2H,EAAK,SACLhB,EAAQ,QACRwE,GACE3D,EACEwD,EAAQ,CACZvD,KAAM,CAAC,OAAS,GAAEzH,KAAU0H,EAAAA,EAAAA,GAAWC,GAAShB,KAAc,GAAE3G,KAChEgJ,KAAM,CAAC,QACP1C,QAAS,CAAC,WACViD,OAAQ,CAAC,WAEX,OAAO6B,EAAAA,EAAAA,GAAeJ,EAAOpE,EAAsBuE,EAAQ,EA0H3CE,CAAkB7D,GAC5B8D,EAA8H,OAA1GpB,EAAmD,OAA3CC,EAAqBa,EAAMO,aAAuBpB,EAAqBQ,EAAWa,aAAuBtB,EAAOuB,EAAAA,EAC5IC,EAAqH,OAAnGtB,EAAgD,OAAvCC,EAAmBW,EAAMW,WAAqBtB,EAAmBM,EAAWiB,WAAqBxB,EAAQwB,EAAAA,EACpIC,EAAsE,OAAlDvB,EAAwBS,EAAUQ,aAAuBjB,EAAwBM,EAAgBW,YACrHO,EAAiE,OAA/CvB,EAAuBQ,EAAUY,WAAqBpB,EAAuBK,EAAgBe,UACrH,OAAoBzI,EAAAA,EAAAA,MAAMiE,GAAWc,EAAAA,EAAAA,GAAS,CAC5C6C,KAAMA,EACN/K,UAAW,EACXyH,WAAYA,EACZiD,WAAWsB,EAAAA,EAAAA,GAAKZ,EAAQ1D,KAAMgD,GAC9B7K,IAAKA,GACJqL,EAAO,CACR5H,SAAU,EAAU,IAAT2F,GAA8BnJ,EAAAA,EAAAA,KAAKkJ,EAAW,CACvDvB,WAAYA,EACZiD,UAAWU,EAAQnC,KACnB3F,SAAU2F,GAAQ6B,EAAYlE,IAAa8C,EAAmB9C,KAC3D,MAAmB9G,EAAAA,EAAAA,KAAKsJ,EAAc,CACzC3B,WAAYA,EACZiD,UAAWU,EAAQ7E,QACnBjD,SAAUA,IACE,MAAVkG,GAA8B1J,EAAAA,EAAAA,KAAKyJ,EAAa,CAClD9B,WAAYA,EACZiD,UAAWU,EAAQ5B,OACnBlG,SAAUkG,IACP,KAAgB,MAAVA,GAAkB7C,GAAuB7G,EAAAA,EAAAA,KAAKyJ,EAAa,CACpE9B,WAAYA,EACZiD,UAAWU,EAAQ5B,OACnBlG,UAAuBxD,EAAAA,EAAAA,KAAKyL,GAAkBrD,EAAAA,EAAAA,GAAS,CACrD+D,KAAM,QACN,aAActB,EACdhK,MAAOgK,EACP/C,MAAO,UACP3B,QAASU,GACRmF,EAAkB,CACnBxI,UAAuBxD,EAAAA,EAAAA,KAAK6L,GAAgBzD,EAAAA,EAAAA,GAAS,CACnDgB,SAAU,SACT6C,SAEF,QAET,G","sources":["views/dashboard/index.js","../node_modules/@mui/material/Alert/alertClasses.js","../node_modules/@mui/material/internal/svg-icons/SuccessOutlined.js","../node_modules/@mui/material/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@mui/material/internal/svg-icons/ErrorOutline.js","../node_modules/@mui/material/internal/svg-icons/InfoOutlined.js","../node_modules/@mui/material/Alert/Alert.js"],"sourcesContent":["import { ThemeProvider, createTheme } from '@mui/material/styles';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Grid, Autocomplete, Button, TextField, Avatar, Box, Snackbar } from '@mui/material';\r\nimport MuiAlert from '@mui/material/Alert';\r\n\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    mode: 'dark'\r\n  }\r\n});\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst Page = () => {\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [game, setGame] = useState({ name: '', id: null, avatarUrl: '' });\r\n  const [title, setTitle] = useState('');\r\n  const [openError, setOpenError] = useState(false);\r\n  const [openSuccess, setOpenSuccess] = useState(false);\r\n  const [errorReason, setErrorReason] = useState('');\r\n  const [successReason, setSuccessReason] = useState('');\r\n\r\n  useEffect(() => {\r\n    document.title = 'LsCo Software - Dashboard';\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const loginData = JSON.parse(localStorage.getItem('login'));\r\n      const isLoggedIn = localStorage.getItem('login') !== null;\r\n\r\n      if (isLoggedIn) {\r\n        try {\r\n          const responseA = await fetch(`https://api.twitch.tv/helix/channels?broadcaster_id=${loginData.id}`, {\r\n            headers: {\r\n              Authorization: 'Bearer ' + JSON.parse(localStorage.getItem('login')).access_token,\r\n              'Client-ID': JSON.parse(localStorage.getItem('login')).client_id\r\n            }\r\n          });\r\n\r\n          const dataA = await responseA.json();\r\n\r\n          if (responseA.ok && dataA.data.length > 0) {\r\n            const channelData = dataA.data[0];\r\n            setGame({\r\n              name: channelData.game_name.length ? channelData.game_name : 'None',\r\n              id: channelData.game_id.length ? channelData.game_id : 0,\r\n              avatarUrl: ''\r\n            });\r\n            setTitle(channelData.title);\r\n          }\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const showError = () => {\r\n    setOpenError(true);\r\n  };\r\n\r\n  const closeError = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpenError(false);\r\n  };\r\n\r\n  const showSuccess = () => {\r\n    setOpenSuccess(true);\r\n  };\r\n\r\n  const closeSuccess = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpenSuccess(false);\r\n  };\r\n\r\n  const updateProperties = async () => {\r\n    const loginData = JSON.parse(localStorage.getItem('login'));\r\n    if (!loginData) {\r\n      setErrorReason('Log in with your Twitch account to use this tool');\r\n      showError();\r\n      return;\r\n    }\r\n\r\n    const broadcasterId = decodeURIComponent(loginData.id);\r\n\r\n    try {\r\n      const response = await fetch(`https://api.twitch.tv/helix/channels?broadcaster_id=${broadcasterId}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          Authorization: 'Bearer ' + loginData.access_token,\r\n          'Client-ID': loginData.client_id,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          game_id: game.id ?? 0,\r\n          title: title.length ? title : ' '\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        setErrorReason(data.message);\r\n        showError();\r\n      } else {\r\n        setSuccessReason('Successfully updated your title & game.');\r\n        showSuccess();\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleSearchChange = async (value) => {\r\n    if (!localStorage.getItem('login')) {\r\n      return setSearchResults([]);\r\n    }\r\n\r\n    if (value.trim() !== '') {\r\n      const response = await fetch(`https://api.twitch.tv/helix/search/categories?query=${decodeURIComponent(value)}&first=15`, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + JSON.parse(localStorage.getItem('login')).access_token,\r\n          'Client-ID': JSON.parse(localStorage.getItem('login')).client_id\r\n        }\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setSearchResults(\r\n          data.data.map((category) => ({\r\n            name: category.name,\r\n            id: category.id,\r\n            avatarUrl: category.box_art_url.replace('500', '520')\r\n          }))\r\n        );\r\n      } else {\r\n        setSearchResults([]);\r\n      }\r\n    } else {\r\n      setSearchResults([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainCard title=\"Dashboard\" description=\"Here you can update the stream or get info about a user.\">\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <ThemeProvider theme={theme}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              label=\"Title\"\r\n              variant=\"outlined\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              autoFocus\r\n            />\r\n          </ThemeProvider>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <ThemeProvider theme={theme}>\r\n            <Autocomplete\r\n              value={game}\r\n              options={searchResults}\r\n              getOptionLabel={(option) => {\r\n                return option.name;\r\n              }}\r\n              onChange={(event, value) => {\r\n                setGame(value ?? { name: '', id: null, avatarUrl: '' });\r\n              }}\r\n              isOptionEqualToValue={(option, value) => option.id === value.id}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  fullWidth\r\n                  id=\"outlined-basic\"\r\n                  label=\"Game\"\r\n                  variant=\"outlined\"\r\n                  onChange={(event) => {\r\n                    handleSearchChange(event.target.value);\r\n                  }}\r\n                />\r\n              )}\r\n              renderOption={(props, option) => (\r\n                <li {...props}>\r\n                  <Box display=\"flex\" alignItems=\"center\">\r\n                    <Avatar variant=\"square\" src={option.avatarUrl} alt={option.name} sx={{ width: 35, height: 45, marginRight: 1 }} />\r\n                    {option.name}\r\n                  </Box>\r\n                </li>\r\n              )}\r\n            />\r\n          </ThemeProvider>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button variant=\"text\" fullWidth onClick={updateProperties}>\r\n            Update\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Snackbar open={openError} autoHideDuration={2500} onClose={closeError}>\r\n        <Alert onClose={closeError} severity=\"error\" sx={{ width: '100%' }}>\r\n          {errorReason}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <Snackbar open={openSuccess} autoHideDuration={1500} onClose={closeSuccess}>\r\n        <Alert onClose={closeSuccess} severity=\"success\" sx={{ width: '100%' }}>\r\n          {successReason}\r\n        </Alert>\r\n      </Snackbar>\r\n    </MainCard>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getAlertUtilityClass(slot) {\n  return generateUtilityClass('MuiAlert', slot);\n}\nconst alertClasses = generateUtilityClasses('MuiAlert', ['root', 'action', 'icon', 'message', 'filled', 'filledSuccess', 'filledInfo', 'filledWarning', 'filledError', 'outlined', 'outlinedSuccess', 'outlinedInfo', 'outlinedWarning', 'outlinedError', 'standard', 'standardSuccess', 'standardInfo', 'standardWarning', 'standardError']);\nexport default alertClasses;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"children\", \"className\", \"closeText\", \"color\", \"components\", \"componentsProps\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"slotProps\", \"slots\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { darken, lighten } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport Paper from '../Paper';\nimport alertClasses, { getAlertUtilityClass } from './alertClasses';\nimport IconButton from '../IconButton';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    severity,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', `${variant}${capitalize(color || severity)}`, `${variant}`],\n    icon: ['icon'],\n    message: ['message'],\n    action: ['action']\n  };\n  return composeClasses(slots, getAlertUtilityClass, classes);\n};\nconst AlertRoot = styled(Paper, {\n  name: 'MuiAlert',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color || ownerState.severity)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const getColor = theme.palette.mode === 'light' ? darken : lighten;\n  const getBackgroundColor = theme.palette.mode === 'light' ? lighten : darken;\n  const color = ownerState.color || ownerState.severity;\n  return _extends({}, theme.typography.body2, {\n    backgroundColor: 'transparent',\n    display: 'flex',\n    padding: '6px 16px'\n  }, color && ownerState.variant === 'standard' && {\n    color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n    backgroundColor: theme.vars ? theme.vars.palette.Alert[`${color}StandardBg`] : getBackgroundColor(theme.palette[color].light, 0.9),\n    [`& .${alertClasses.icon}`]: theme.vars ? {\n      color: theme.vars.palette.Alert[`${color}IconColor`]\n    } : {\n      color: theme.palette[color].main\n    }\n  }, color && ownerState.variant === 'outlined' && {\n    color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n    border: `1px solid ${(theme.vars || theme).palette[color].light}`,\n    [`& .${alertClasses.icon}`]: theme.vars ? {\n      color: theme.vars.palette.Alert[`${color}IconColor`]\n    } : {\n      color: theme.palette[color].main\n    }\n  }, color && ownerState.variant === 'filled' && _extends({\n    fontWeight: theme.typography.fontWeightMedium\n  }, theme.vars ? {\n    color: theme.vars.palette.Alert[`${color}FilledColor`],\n    backgroundColor: theme.vars.palette.Alert[`${color}FilledBg`]\n  } : {\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette[color].dark : theme.palette[color].main,\n    color: theme.palette.getContrastText(theme.palette[color].main)\n  }));\n});\nconst AlertIcon = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => styles.icon\n})({\n  marginRight: 12,\n  padding: '7px 0',\n  display: 'flex',\n  fontSize: 22,\n  opacity: 0.9\n});\nconst AlertMessage = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0',\n  minWidth: 0,\n  overflow: 'auto'\n});\nconst AlertAction = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'flex-start',\n  padding: '4px 0 0 16px',\n  marginLeft: 'auto',\n  marginRight: -8\n});\nconst defaultIconMapping = {\n  success: /*#__PURE__*/_jsx(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/_jsx(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/_jsx(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/_jsx(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\nconst Alert = /*#__PURE__*/React.forwardRef(function Alert(inProps, ref) {\n  var _ref, _slots$closeButton, _ref2, _slots$closeIcon, _slotProps$closeButto, _slotProps$closeIcon;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAlert'\n  });\n  const {\n      action,\n      children,\n      className,\n      closeText = 'Close',\n      color,\n      components = {},\n      componentsProps = {},\n      icon,\n      iconMapping = defaultIconMapping,\n      onClose,\n      role = 'alert',\n      severity = 'success',\n      slotProps = {},\n      slots = {},\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    severity,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const AlertCloseButton = (_ref = (_slots$closeButton = slots.closeButton) != null ? _slots$closeButton : components.CloseButton) != null ? _ref : IconButton;\n  const AlertCloseIcon = (_ref2 = (_slots$closeIcon = slots.closeIcon) != null ? _slots$closeIcon : components.CloseIcon) != null ? _ref2 : CloseIcon;\n  const closeButtonProps = (_slotProps$closeButto = slotProps.closeButton) != null ? _slotProps$closeButto : componentsProps.closeButton;\n  const closeIconProps = (_slotProps$closeIcon = slotProps.closeIcon) != null ? _slotProps$closeIcon : componentsProps.closeIcon;\n  return /*#__PURE__*/_jsxs(AlertRoot, _extends({\n    role: role,\n    elevation: 0,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [icon !== false ? /*#__PURE__*/_jsx(AlertIcon, {\n      ownerState: ownerState,\n      className: classes.icon,\n      children: icon || iconMapping[severity] || defaultIconMapping[severity]\n    }) : null, /*#__PURE__*/_jsx(AlertMessage, {\n      ownerState: ownerState,\n      className: classes.message,\n      children: children\n    }), action != null ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: action\n    }) : null, action == null && onClose ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: /*#__PURE__*/_jsx(AlertCloseButton, _extends({\n        size: \"small\",\n        \"aria-label\": closeText,\n        title: closeText,\n        color: \"inherit\",\n        onClick: onClose\n      }, closeButtonProps, {\n        children: /*#__PURE__*/_jsx(AlertCloseIcon, _extends({\n          fontSize: \"small\"\n        }, closeIconProps))\n      }))\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The color of the component. Unless provided, the value is taken from the `severity` prop.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    CloseButton: PropTypes.elementType,\n    CloseIcon: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    closeButton: PropTypes.object,\n    closeIcon: PropTypes.object\n  }),\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   * Set to `false` to remove the `icon`.\n   */\n  icon: PropTypes.node,\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes.string,\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   * @default 'success'\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    closeButton: PropTypes.object,\n    closeIcon: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `components` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    closeButton: PropTypes.elementType,\n    closeIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default Alert;"],"names":["theme","createTheme","palette","mode","Alert","React","props","ref","_jsx","MuiAlert","elevation","variant","Page","searchResults","setSearchResults","useState","game","setGame","name","id","avatarUrl","title","setTitle","openError","setOpenError","openSuccess","setOpenSuccess","errorReason","setErrorReason","successReason","setSuccessReason","useEffect","document","async","loginData","JSON","parse","localStorage","getItem","responseA","fetch","headers","Authorization","access_token","client_id","dataA","json","ok","data","length","channelData","game_name","game_id","error","console","fetchData","showError","closeError","event","reason","closeSuccess","_jsxs","MainCard","description","children","Grid","container","spacing","item","xs","sm","ThemeProvider","TextField","fullWidth","label","value","onChange","e","target","autoFocus","Autocomplete","options","getOptionLabel","option","isOptionEqualToValue","renderInput","params","trim","response","decodeURIComponent","map","category","box_art_url","replace","handleSearchChange","renderOption","Box","display","alignItems","Avatar","src","alt","sx","width","height","marginRight","Button","onClick","broadcasterId","_game$id","method","body","stringify","message","Snackbar","open","autoHideDuration","onClose","severity","getAlertUtilityClass","slot","generateUtilityClass","generateUtilityClasses","createSvgIcon","d","_excluded","AlertRoot","styled","Paper","overridesResolver","styles","ownerState","root","capitalize","color","_ref3","getColor","darken","lighten","getBackgroundColor","_extends","typography","body2","backgroundColor","padding","vars","light","alertClasses","main","border","fontWeight","fontWeightMedium","dark","getContrastText","AlertIcon","icon","fontSize","opacity","AlertMessage","minWidth","overflow","AlertAction","action","marginLeft","defaultIconMapping","success","SuccessOutlinedIcon","warning","ReportProblemOutlinedIcon","ErrorOutlineIcon","info","InfoOutlinedIcon","inProps","_ref","_slots$closeButton","_ref2","_slots$closeIcon","_slotProps$closeButto","_slotProps$closeIcon","useThemeProps","className","closeText","components","componentsProps","iconMapping","role","slotProps","slots","other","_objectWithoutPropertiesLoose","classes","composeClasses","useUtilityClasses","AlertCloseButton","closeButton","CloseButton","IconButton","AlertCloseIcon","closeIcon","CloseIcon","closeButtonProps","closeIconProps","clsx","size"],"sourceRoot":""}