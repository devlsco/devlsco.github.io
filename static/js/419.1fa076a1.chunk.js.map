{"version":3,"file":"static/js/419.1fa076a1.chunk.js","mappings":"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","sources":["views/marathon/modding/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { BasicPubSubClient } from '@twurple/pubsub';\r\nimport { ChatClient } from '@twurple/chat';\r\n\r\nconst Page = () => {\r\n  const [currentSubCount, setCurrentSubCount] = useState(0);\r\n  const [moderationAction, setModerationAction] = useState(0);\r\n  const [moderationActionNeed, setModerationActionNeed] = useState(0);\r\n  const [moderationActionTotal, setModerationActionTotal] = useState(0);\r\n\r\n  useEffect(() => {\r\n    document.title = 'LsCo Software - Modding Marathon';\r\n    document.body.style.backgroundColor = 'initial !important';\r\n\r\n    const fetchData = async () => {\r\n      const authToken = new URLSearchParams(window.location.search).get('access_token');\r\n      const username = new URLSearchParams(window.location.search).get('login');\r\n      const userID = new URLSearchParams(window.location.search).get('id');\r\n      const perSub = new URLSearchParams(window.location.search).get('persub');\r\n      const channels = await getChannels(username, userID);\r\n\r\n      const topics = channels.map((i) => `chat_moderator_actions.${userID}.${i}`);\r\n\r\n      const pubsub = new BasicPubSubClient();\r\n\r\n      pubsub.onDisconnect((isError, reason) => {\r\n        console.log('[PubSub] Disconnected', reason);\r\n      });\r\n\r\n      pubsub.onListenError((topic, error) => {\r\n        console.error(`[PubSub] An error has occurred on topic '${topic}':`, error);\r\n      });\r\n\r\n      pubsub.onConnect(async () => {\r\n        console.log('[PubSub] Connected');\r\n        await pubsub.listen(topics, authToken);\r\n      });\r\n\r\n      pubsub.onMessage(async (topic, message) => {\r\n        if (topic.split('.').shift() === 'chat_moderator_actions') {\r\n          if (message.data.created_by_user_id === userID) {\r\n            switch (message.data.moderation_action) {\r\n              case 'delete':\r\n              case 'timeout':\r\n              case 'ban': {\r\n                setModerationAction((prevAction) => prevAction + 1);\r\n                setModerationActionTotal((prevTotal) => prevTotal + 1);\r\n                break;\r\n              }\r\n              default:\r\n                break;\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      const client = new ChatClient({ channels: [username] });\r\n\r\n      client.onMessage((channel, user, message, userstate) => {\r\n        if (userstate.userInfo.userId === userID) {\r\n          if (!message.startsWith('!')) return;\r\n          const msg = message.slice('!'.length).trim().split(/ +/);\r\n\r\n          console.log(msg);\r\n          if (msg[0]?.toLowerCase() === 'overlay') {\r\n            switch (msg[1]?.toLowerCase()) {\r\n              case 'reset': {\r\n                localStorage.setItem('marathon_subs', 0);\r\n                localStorage.setItem('marathon_moderation_action_need', 0);\r\n                localStorage.setItem('marathon_moderation_action', 0);\r\n                setModerationAction(0);\r\n                setModerationActionNeed(0);\r\n                setCurrentSubCount(0);\r\n                return;\r\n              }\r\n\r\n              case 'subs': {\r\n                if (!msg[2]) return;\r\n\r\n                if (!/^[0-9]+$/.test(msg[2])) return;\r\n\r\n                setCurrentSubCount(Number(msg[2]));\r\n                localStorage.setItem('marathon_subs', Number(msg[2]));\r\n                return;\r\n              }\r\n\r\n              case 'mod_actions': {\r\n                if (!msg[2]) return;\r\n\r\n                if (!/^[0-9]+$/.test(msg[2])) return;\r\n\r\n                setModerationAction(Number(msg[2]));\r\n                localStorage.setItem('marathon_moderation_action', Number(msg[2]));\r\n                return;\r\n              }\r\n\r\n              case 'mod_actions_need': {\r\n                if (!msg[2]) return;\r\n\r\n                if (!/^[0-9]+$/.test(msg[2])) return;\r\n\r\n                setModerationActionNeed(Number(msg[2]));\r\n                localStorage.setItem('marathon_moderation_action_need', Number(msg[2]));\r\n                return;\r\n              }\r\n\r\n              case 'mod_actions_total': {\r\n                if (!msg[2]) return;\r\n\r\n                if (!/^[0-9]+$/.test(msg[2])) return;\r\n\r\n                setModerationActionTotal(Number(msg[2]));\r\n                localStorage.setItem('marathon_moderation_action_total', Number(msg[2]));\r\n                return;\r\n              }\r\n\r\n              default:\r\n                return;\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      client.onSub(() => {\r\n        setCurrentSubCount((prevCount) => prevCount + 1);\r\n        setModerationActionNeed((prevActionNeed) => prevActionNeed + (perSub || 5));\r\n      });\r\n\r\n      client.onResub(() => {\r\n        setCurrentSubCount((prevCount) => prevCount + 1);\r\n        setModerationActionNeed((prevActionNeed) => prevActionNeed + (perSub || 5));\r\n      });\r\n\r\n      client.onSubGift(() => {\r\n        setCurrentSubCount((prevCount) => prevCount + 1);\r\n        setModerationActionNeed((prevActionNeed) => prevActionNeed + (perSub || 5));\r\n      });\r\n\r\n      pubsub.connect();\r\n      client.connect();\r\n\r\n      return () => {\r\n        pubsub.disconnect();\r\n        client.disconnect();\r\n      };\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        fontFamily: 'Comic Neue',\r\n        fontSize: 'xx-large',\r\n        textAlign: 'end',\r\n        verticalAlign: 'middle',\r\n        textShadow: '4px 4px 6px rgba(0, 0, 0, 0.4)',\r\n        margin: '2.5rem'\r\n      }}\r\n    >\r\n      Subs: {format(currentSubCount)} - Mod Actions: {format(moderationAction)}/{format(Number(moderationActionNeed))} - Total:{' '}\r\n      {format(moderationActionTotal)}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst format = (number) => {\r\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\r\n};\r\n\r\nconst getChannels = async (login, id) => {\r\n  const request = await fetch('https://api.modscanner.com/twitch/user/' + login);\r\n\r\n  if (!request.ok) return [];\r\n\r\n  const data = await request.json();\r\n\r\n  return [...data.moderating.map((i) => i.id), id];\r\n};\r\n\r\nexport default Page;\r\n"],"names":["format","number","toString","replace","getChannels","async","login","id","request","fetch","ok","json","moderating","map","i","Page","currentSubCount","setCurrentSubCount","useState","moderationAction","setModerationAction","moderationActionNeed","setModerationActionNeed","moderationActionTotal","setModerationActionTotal","useEffect","document","title","body","style","backgroundColor","authToken","URLSearchParams","window","location","search","get","username","userID","perSub","topics","pubsub","BasicPubSubClient","onDisconnect","isError","reason","console","log","onListenError","topic","error","onConnect","listen","onMessage","message","split","shift","data","created_by_user_id","moderation_action","prevAction","prevTotal","client","ChatClient","channels","channel","user","userstate","userInfo","userId","_msg$","startsWith","msg","slice","length","trim","_msg$2","toLowerCase","localStorage","setItem","test","Number","onSub","prevCount","prevActionNeed","onResub","onSubGift","connect","fetchData","_jsxs","fontFamily","fontSize","textAlign","verticalAlign","textShadow","margin","children"],"sourceRoot":""}