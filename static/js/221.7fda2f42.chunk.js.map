{"version":3,"file":"static/js/221.7fda2f42.chunk.js","mappings":"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","sources":["views/generator/regex/index.js"],"sourcesContent":["import { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { FaRegCopy } from 'react-icons/fa';\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { Typography, TextField, Grid, FormControlLabel, Checkbox, Snackbar, InputAdornment, IconButton } from '@mui/material';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport MuiAlert from '@mui/material/Alert';\r\n\r\nconst darkTheme = createTheme({\r\n  palette: {\r\n    mode: 'dark'\r\n  }\r\n});\r\n\r\nconst Page = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [lookalikesValue, setLookalikesValue] = useState(true);\r\n  const [chattyValue, setChattyValue] = useState(false);\r\n  const [fossabotRegExValue, setFossabotRegExValue] = useState(false);\r\n  const [startValue, setStartValue] = useState('\\\\b');\r\n  const [endValue, setEndValue] = useState('\\\\b');\r\n  const [contentValue, setContentValue] = useState('([<letter>][\\\\W_]*?)+');\r\n  const [outputMessage, setOutputMessage] = useState('');\r\n  const [isCopied, setIsCopied] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.title = `LsCo Software - RegEx Generator`;\r\n\r\n    const params = new URLSearchParams(window.location.search);\r\n\r\n    if (params.get('msg')) {\r\n      setMessage(params.getAll('msg').join('\\n'));\r\n      console.log('msg', params.get('msg'));\r\n    }\r\n\r\n    if (params.get('start')) {\r\n      setStartValue(params.get('start'));\r\n      console.log('start', params.get('start'));\r\n    }\r\n\r\n    if (params.get('end')) {\r\n      setEndValue(params.get('end'));\r\n      console.log('end', params.get('end'));\r\n    }\r\n\r\n    if (params.get('group')) {\r\n      setContentValue(params.get('group'));\r\n      console.log('group', params.get('group'));\r\n    }\r\n  }, []);\r\n\r\n  const Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n  });\r\n\r\n  const handleFossabotRegExChange = (e) => {\r\n    const { checked } = e.target;\r\n    setFossabotRegExValue(checked);\r\n\r\n    if (chattyValue) {\r\n      setChattyValue(!checked);\r\n    }\r\n  };\r\n\r\n  const handleChattyChange = (e) => {\r\n    const { checked } = e.target;\r\n    setChattyValue(checked);\r\n\r\n    if (fossabotRegExValue) {\r\n      setFossabotRegExValue(!checked);\r\n    }\r\n  };\r\n\r\n  const handleClick = useCallback(\r\n    (msg) => {\r\n      const trimmedMessageArray = msg.split('\\n').map((i) => i.trim());\r\n      if (!contentValue.match(/<letter>/gi)) {\r\n        return setOutputMessage('<letter> not found in Group');\r\n      }\r\n\r\n      const list = [];\r\n\r\n      for (let i = 0; i < trimmedMessageArray.length; i++) {\r\n        const filteredRegex = /[a-züäö0-9]/gi;\r\n        const filteredMessage = trimmedMessageArray[i].match(filteredRegex);\r\n\r\n        if (!filteredMessage) {\r\n          continue;\r\n        }\r\n\r\n        const regex = filteredMessage\r\n          .map((char) => {\r\n            const replacerRegex = new RegExp(\r\n              contentValue.replace(/<letter>/gi, lookalikesValue ? replacer(char.toLowerCase()) : char.toLowerCase()),\r\n              'gi'\r\n            );\r\n            return replacerRegex.source;\r\n          })\r\n          .join('');\r\n\r\n        list.push(regex);\r\n      }\r\n\r\n      const output = list\r\n        .map((i) => {\r\n          if (chattyValue) {\r\n            return `config:any regi:${startValue}${i}${endValue}`;\r\n          } else if (fossabotRegExValue) {\r\n            return `regex:${startValue}${i}${endValue}`;\r\n          } else {\r\n            return `${startValue}${i}${endValue}`;\r\n          }\r\n        })\r\n        .join('\\n');\r\n\r\n      setOutputMessage(output);\r\n    },\r\n    [chattyValue, fossabotRegExValue, lookalikesValue, startValue, contentValue, endValue]\r\n  );\r\n\r\n  const handleCopyClick = () => {\r\n    navigator.clipboard.writeText(outputMessage);\r\n    setIsCopied(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsCopied(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleClick(message);\r\n  }, [message, chattyValue, fossabotRegExValue, lookalikesValue, handleClick]);\r\n\r\n  function replacer(x) {\r\n    const lookalikes = [\r\n      {\r\n        char: 'a',\r\n        replacements: ['ä', '@', '4', '%']\r\n      },\r\n      {\r\n        char: 'e',\r\n        replacements: ['€', '³', '3']\r\n      },\r\n      {\r\n        char: 'g',\r\n        replacements: ['9']\r\n      },\r\n      {\r\n        char: 'i',\r\n        replacements: ['|', '1', '!']\r\n      },\r\n      {\r\n        char: 'o',\r\n        replacements: ['ö', '0']\r\n      },\r\n      {\r\n        char: 's',\r\n        replacements: ['$']\r\n      },\r\n      {\r\n        char: 'u',\r\n        replacements: ['ü']\r\n      }\r\n    ];\r\n\r\n    const find = lookalikes.find((i) => i.char === x);\r\n\r\n    if (!find) return x;\r\n\r\n    return x + find.replacements.join('');\r\n  }\r\n\r\n  return (\r\n    <MainCard title=\"RegEx Generator\" description=\"You can create a regular expression for your benefit.\">\r\n      <Typography variant=\"body2\">\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item xs={12}>\r\n            <ThemeProvider theme={darkTheme}>\r\n              <TextField\r\n                fullWidth\r\n                multiline\r\n                id=\"outlined-basic\"\r\n                minRows={5}\r\n                label=\"Message\"\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n              />\r\n            </ThemeProvider>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <ThemeProvider theme={darkTheme}>\r\n              <TextField\r\n                fullWidth\r\n                multiline\r\n                id=\"outlined-start-adornment\"\r\n                InputProps={{\r\n                  startAdornment: <InputAdornment position=\"start\">Start</InputAdornment>\r\n                }}\r\n                variant=\"outlined\"\r\n                value={startValue}\r\n                onInput={(event) => setStartValue(event.target.value)}\r\n              />\r\n            </ThemeProvider>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <ThemeProvider theme={darkTheme}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                multiline\r\n                id=\"outlined-start-adornment\"\r\n                InputProps={{\r\n                  startAdornment: <InputAdornment position=\"start\">Group</InputAdornment>\r\n                }}\r\n                variant=\"outlined\"\r\n                value={contentValue}\r\n                onInput={(event) => setContentValue(event.target.value)}\r\n              />\r\n            </ThemeProvider>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <ThemeProvider theme={darkTheme}>\r\n              <TextField\r\n                fullWidth\r\n                multiline\r\n                id=\"outlined-start-adornment\"\r\n                InputProps={{\r\n                  startAdornment: <InputAdornment position=\"start\">End</InputAdornment>\r\n                }}\r\n                variant=\"outlined\"\r\n                value={endValue}\r\n                onInput={(event) => setEndValue(event.target.value)}\r\n              />\r\n            </ThemeProvider>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <FormControlLabel\r\n              control={<Checkbox checked={lookalikesValue} onChange={(e) => setLookalikesValue(e.target.checked)} defaultChecked />}\r\n              label=\"Lookalikes\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox checked={fossabotRegExValue} onChange={handleFossabotRegExChange} />}\r\n              label=\"Fossabot RegEx\"\r\n            />\r\n            <FormControlLabel control={<Checkbox checked={chattyValue} onChange={handleChattyChange} />} label=\"Chatty RegEx\" />\r\n            <hr />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {outputMessage && (\r\n              <>\r\n                <ThemeProvider theme={darkTheme}>\r\n                  <TextField\r\n                    disabled\r\n                    fullWidth\r\n                    multiline\r\n                    id=\"outlined-basic\"\r\n                    type=\"text\"\r\n                    variant=\"outlined\"\r\n                    value={outputMessage}\r\n                    InputProps={{\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton aria-label=\"Copy\" onClick={handleCopyClick}>\r\n                            <FaRegCopy />\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      )\r\n                    }}\r\n                  />\r\n                </ThemeProvider>\r\n              </>\r\n            )}\r\n            {isCopied && (\r\n              <Snackbar open={isCopied} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\r\n                  Copied to clipboard!\r\n                </Alert>\r\n              </Snackbar>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Typography>\r\n    </MainCard>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n"],"names":["darkTheme","createTheme","palette","mode","Page","message","setMessage","useState","lookalikesValue","setLookalikesValue","chattyValue","setChattyValue","fossabotRegExValue","setFossabotRegExValue","startValue","setStartValue","endValue","setEndValue","contentValue","setContentValue","outputMessage","setOutputMessage","isCopied","setIsCopied","useEffect","document","title","params","URLSearchParams","window","location","search","get","getAll","join","console","log","Alert","React","props","ref","_jsx","MuiAlert","elevation","variant","handleClick","useCallback","msg","trimmedMessageArray","split","map","i","trim","match","list","length","filteredRegex","filteredMessage","regex","char","RegExp","replace","replacer","toLowerCase","source","push","output","handleClose","x","find","replacements","MainCard","description","children","Typography","_jsxs","Grid","container","spacing","alignItems","item","xs","ThemeProvider","theme","TextField","fullWidth","multiline","id","minRows","label","type","value","onChange","e","target","sm","InputProps","startAdornment","InputAdornment","position","onInput","event","required","FormControlLabel","control","Checkbox","checked","defaultChecked","_Fragment","disabled","endAdornment","IconButton","onClick","handleCopyClick","navigator","clipboard","writeText","FaRegCopy","Snackbar","open","autoHideDuration","onClose","severity","sx","width"],"sourceRoot":""}