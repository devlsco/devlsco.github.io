{"version":3,"file":"static/js/221.e373ea73.chunk.js","mappings":"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","sources":["ui-component/cards/MainCard.js","views/generator/regex/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\n\n// constant\nconst headerSX = {\n  '& .MuiCardHeader-action': { mr: 0 }\n};\n\n// ==============================|| CUSTOM MAIN CARD ||============================== //\n\nconst MainCard = forwardRef(\n  (\n    {\n      border = true,\n      boxShadow,\n      children,\n      content = true,\n      contentClass = '',\n      contentSX = {},\n      darkTitle,\n      secondary,\n      shadow,\n      sx = {},\n      title,\n      ...others\n    },\n    ref\n  ) => {\n    const theme = useTheme();\n\n    return (\n      <Card\n        ref={ref}\n        {...others}\n        sx={{\n          border: border ? '1px solid' : 'none',\n          borderColor: theme.palette.primary[200] + 25,\n          ':hover': {\n            boxShadow: boxShadow ? shadow || '0 2px 14px 0 rgb(32 40 45 / 8%)' : 'inherit'\n          },\n          ...sx\n        }}\n      >\n        {/* card header and action */}\n        {title && <CardHeader sx={headerSX} title={darkTitle ? <Typography variant=\"h3\">{title}</Typography> : title} action={secondary} />}\n\n        {/* content & header divider */}\n        {title && <Divider />}\n\n        {/* card content */}\n        {content && (\n          <CardContent sx={contentSX} className={contentClass}>\n            {children}\n          </CardContent>\n        )}\n        {!content && children}\n      </Card>\n    );\n  }\n);\n\nMainCard.propTypes = {\n  border: PropTypes.bool,\n  boxShadow: PropTypes.bool,\n  children: PropTypes.node,\n  content: PropTypes.bool,\n  contentClass: PropTypes.string,\n  contentSX: PropTypes.object,\n  darkTitle: PropTypes.bool,\n  secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\n  shadow: PropTypes.string,\n  sx: PropTypes.object,\n  title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\n};\n\nexport default MainCard;\n","import { Typography, TextField, Button, Grid, FormControlLabel, Checkbox, Box, Snackbar } from '@mui/material';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport React, { useState, useRef } from 'react';\r\nimport MuiAlert from '@mui/material/Alert';\r\n\r\nconst Page = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [lookalikesValue, setLookalikesValue] = useState(true);\r\n  const [chattyValue, setChattyValue] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [outputMessage, setOutputMessage] = useState('');\r\n  const inputRef = useRef(null);\r\n  const [isCopied, setIsCopied] = useState(false);\r\n\r\n  const Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n  });\r\n\r\n  const handleClick = () => {\r\n    if (message.trim() === '') {\r\n      setError(true);\r\n    } else {\r\n      setError(false);\r\n      const trimmedMessageArray = message.split('\\n').map((i) => i.trim());\r\n\r\n      const list = [];\r\n\r\n      for (let i = 0; i < trimmedMessageArray.length; i++) {\r\n        const filteredRegex = /[a-züäö0-9]/gi;\r\n        const filteredMessage = trimmedMessageArray[i].match(filteredRegex);\r\n\r\n        if (!filteredMessage) {\r\n          continue;\r\n        }\r\n\r\n        const regex = filteredMessage\r\n          .map((char) => {\r\n            const replacerRegex = new RegExp(`[${lookalikesValue ? replacer(char) : char}][\\\\W_]*?`, 'gi');\r\n            return `(${replacerRegex.source})+`;\r\n          })\r\n          .join('');\r\n\r\n        list.push(regex);\r\n      }\r\n\r\n      const output = list\r\n        .map((i) => {\r\n          return `${chattyValue ? 'config:any regi:' : ''}\\\\b${i.toLowerCase()}\\\\b`;\r\n        })\r\n        .join('\\n');\r\n\r\n      setOutputMessage(output);\r\n    }\r\n  };\r\n\r\n  const handleCopyClick = () => {\r\n    navigator.clipboard.writeText(outputMessage);\r\n    setIsCopied(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsCopied(false);\r\n  };\r\n\r\n  function replacer(x) {\r\n    const lookalikes = [\r\n      {\r\n        char: 'a',\r\n        replacements: ['ä', '@', '4', '%']\r\n      },\r\n      {\r\n        char: 'e',\r\n        replacements: ['€', '³', '3']\r\n      },\r\n      {\r\n        char: 'g',\r\n        replacements: ['9']\r\n      },\r\n      {\r\n        char: 'i',\r\n        replacements: ['|', '1', '!']\r\n      },\r\n      {\r\n        char: 'o',\r\n        replacements: ['ö', '0']\r\n      },\r\n      {\r\n        char: 's',\r\n        replacements: ['$']\r\n      },\r\n      {\r\n        char: 'u',\r\n        replacements: ['ü']\r\n      }\r\n    ];\r\n\r\n    const find = lookalikes.find((i) => i.char === x);\r\n\r\n    if (!find) return x;\r\n\r\n    return x + find.replacements.join('');\r\n  }\r\n\r\n  return (\r\n    <MainCard title=\"RegEx Generator\">\r\n      <Typography variant=\"body2\">\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              id=\"standard-basic\"\r\n              label=\"Message\"\r\n              type=\"text\"\r\n              variant=\"standard\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              error={error}\r\n              helperText={error ? 'This field is required' : ''}\r\n              inputRef={inputRef}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Button variant=\"contained\" fullWidth onClick={handleClick}>\r\n              Contained\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={lookalikesValue}\r\n                  onChange={(e) => {\r\n                    setLookalikesValue(e.target.checked);\r\n                  }}\r\n                  defaultChecked\r\n                />\r\n              }\r\n              label=\"Lookalikes\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={chattyValue}\r\n                  onChange={(e) => {\r\n                    setChattyValue(e.target.checked);\r\n                  }}\r\n                />\r\n              }\r\n              label=\"Chatty\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              fullWidth\r\n              sx={{\r\n                backgroundColor: 'rgb(250,250,250,0.1)',\r\n                padding: '2.5px',\r\n                paddingX: '15px',\r\n                whiteSpace: 'pre-wrap',\r\n                maxWidth: '100%',\r\n                overflowX: 'auto'\r\n              }}\r\n            >\r\n              <pre style={{ userSelect: 'all', margin: 0 }}>\r\n                {outputMessage.split('\\n').map((line, index) => (\r\n                  <React.Fragment key={index}>\r\n                    <span style={{ marginRight: '1px', userSelect: 'none' }}>{index + 1}.</span>\r\n                    <span>{line}</span>\r\n                    <br />\r\n                  </React.Fragment>\r\n                ))}\r\n              </pre>\r\n              {outputMessage && (\r\n                <>\r\n                  <Button variant=\"text\" fullWidth onClick={handleCopyClick}>\r\n                    Copy\r\n                  </Button>\r\n                  {isCopied && (\r\n                    <Snackbar open={isCopied} autoHideDuration={6000} onClose={handleClose}>\r\n                      <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\r\n                        Copied to clipboard!\r\n                      </Alert>\r\n                    </Snackbar>\r\n                  )}\r\n                </>\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Typography>\r\n    </MainCard>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n"],"names":["headerSX","mr","MainCard","forwardRef","_ref","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","theme","useTheme","_jsxs","Card","borderColor","palette","primary","_jsx","CardHeader","Typography","variant","action","Divider","CardContent","className","Page","message","setMessage","useState","lookalikesValue","setLookalikesValue","chattyValue","setChattyValue","error","setError","outputMessage","setOutputMessage","inputRef","useRef","isCopied","setIsCopied","Alert","React","props","MuiAlert","elevation","handleClose","replacer","x","find","char","replacements","i","join","Grid","container","spacing","alignItems","item","xs","TextField","fullWidth","multiline","id","label","type","value","onChange","e","target","helperText","Button","onClick","handleClick","trim","trimmedMessageArray","split","map","list","length","filteredRegex","filteredMessage","match","regex","RegExp","source","push","output","toLowerCase","FormControlLabel","control","Checkbox","checked","defaultChecked","Box","backgroundColor","padding","paddingX","whiteSpace","maxWidth","overflowX","style","userSelect","margin","line","index","marginRight","_Fragment","handleCopyClick","navigator","clipboard","writeText","Snackbar","open","autoHideDuration","onClose","severity","width"],"sourceRoot":""}