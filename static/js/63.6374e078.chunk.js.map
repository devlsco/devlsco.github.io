{"version":3,"file":"static/js/63.6374e078.chunk.js","mappings":"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","sources":["views/twitch/revoking-tokens/index.js","../node_modules/@mui/system/esm/Box/Box.js"],"sourcesContent":["import { Typography, TextField, Button, Grid } from '@mui/material';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { useState, useEffect } from 'react';\r\nimport { Box } from '@mui/system';\r\n\r\nconst Page = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState(false);\r\n  const [outputData, setOutputData] = useState(null);\r\n  const [outputError, setOutputError] = useState(null);\r\n  const [hovered, setHovered] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.title = `LsCo Software - Revoking Tokens`;\r\n  }, []);\r\n\r\n  const handleClick = async () => {\r\n    if (message.trim() === '') {\r\n      setError(true);\r\n      setOutputData(null);\r\n      setOutputError('This field is required');\r\n    } else {\r\n      try {\r\n        const data = await validateTokenAndRevoke(message);\r\n\r\n        setError(false);\r\n        setOutputData(data);\r\n        setOutputError(null);\r\n      } catch (err) {\r\n        setError(true);\r\n        setOutputData(null);\r\n        setOutputError(err.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const validateTokenAndRevoke = async (token) => {\r\n    const validateResponse = await fetch('https://id.twitch.tv/oauth2/validate', {\r\n      headers: {\r\n        Authorization: `OAuth ${token}`\r\n      }\r\n    });\r\n\r\n    const validateData = await validateResponse.json();\r\n\r\n    if (!validateResponse.ok) {\r\n      switch (validateData.message) {\r\n        case 'invalid access token':\r\n          throw new Error('Invalid access token');\r\n        default:\r\n          throw new Error(validateData.message || 'Validate token failed');\r\n      }\r\n    }\r\n\r\n    const revokeResponse = await fetch('https://id.twitch.tv/oauth2/revoke', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      },\r\n      body: `client_id=${validateData.client_id}&token=${token}`\r\n    });\r\n\r\n    if (!revokeResponse.ok) {\r\n      throw new Error('Revoke Token failed');\r\n    }\r\n\r\n    return validateData;\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleClick();\r\n    }\r\n  };\r\n\r\n  const handleMouseEnter = () => {\r\n    setHovered(true);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHovered(false);\r\n  };\r\n\r\n  return (\r\n    <MainCard title=\"Revoking Tokens\" description=\"If you no longer needs an access token, you can revoke it.\">\r\n      <Grid container spacing={2} alignItems=\"center\">\r\n        <Grid item xs={9}>\r\n          <TextField\r\n            fullWidth\r\n            id=\"standard-basic\"\r\n            label=\"OAuth Token\"\r\n            type=\"password\"\r\n            variant=\"filled\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            error={error}\r\n            helperText={outputError}\r\n            onKeyPress={handleKeyPress}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Button variant=\"contained\" fullWidth onClick={handleClick}>\r\n            Revoke\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {outputData && (\r\n            <Box\r\n              fullWidth\r\n              sx={{\r\n                backgroundColor: 'rgb(250,250,250,0.1)',\r\n                padding: '2.5px',\r\n                paddingX: '15px',\r\n                whiteSpace: 'pre-wrap',\r\n                maxWidth: '100%',\r\n                overflowX: 'auto'\r\n              }}\r\n            >\r\n              <div style={{ padding: '5px', marginTop: '10px' }}>\r\n                <Typography variant=\"body2\" component=\"pre\">\r\n                  <code>\r\n                    The token was successfully revoked.\r\n                    <br />\r\n                    <br />\r\n                    Login: <span style={{ color: '#00B8D9' }}>{outputData.login}</span> - (ID:{' '}\r\n                    <span style={{ color: '#00B8D9' }}>{outputData.user_id}</span>)\r\n                    <br />\r\n                    Token:{' '}\r\n                    <span\r\n                      className={hovered ? '' : 'blur-on-hover'}\r\n                      style={{ color: '#00B8D9' }}\r\n                      onMouseEnter={handleMouseEnter}\r\n                      onMouseLeave={handleMouseLeave}\r\n                    >\r\n                      {message}\r\n                    </span>\r\n                    <br />\r\n                    ClientID: <span style={{ color: '#00B8D9' }}>{outputData.client_id}</span>\r\n                    <br />\r\n                    Scopes: <span style={{ color: '#00B8D9' }}>{outputData.scopes ? outputData.scopes.join(', ') : 'No scopes'}</span>\r\n                  </code>\r\n                </Typography>\r\n              </div>\r\n            </Box>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </MainCard>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import PropTypes from 'prop-types';\nimport createBox from '../createBox';\nconst Box = createBox();\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;"],"names":["Page","message","setMessage","useState","error","setError","outputData","setOutputData","outputError","setOutputError","hovered","setHovered","useEffect","document","title","handleClick","async","trim","data","validateTokenAndRevoke","err","validateResponse","fetch","headers","Authorization","token","validateData","json","ok","Error","method","body","client_id","_jsx","MainCard","description","children","_jsxs","Grid","container","spacing","alignItems","item","xs","TextField","fullWidth","id","label","type","variant","value","onChange","e","target","helperText","onKeyPress","key","Button","onClick","Box","sx","backgroundColor","padding","paddingX","whiteSpace","maxWidth","overflowX","style","marginTop","Typography","component","color","login","user_id","className","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","scopes","join","createBox"],"sourceRoot":""}