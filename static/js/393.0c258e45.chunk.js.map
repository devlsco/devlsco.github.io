{"version":3,"file":"static/js/393.0c258e45.chunk.js","mappings":"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","sources":["views/twitch/channel-manager/index.js","../node_modules/@mui/material/MenuItem/menuItemClasses.js","../node_modules/@mui/material/MenuItem/MenuItem.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Typography, TextField, Button, Box, Grid, MenuItem, Avatar, Select, FormControl, InputLabel, Autocomplete } from '@mui/material';\r\n\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\nconst Page = () => {\r\n  const [token, setToken] = useState('');\r\n\r\n  const [outputError, setOutputError] = useState('');\r\n  const [outputData, setOutputData] = useState('');\r\n\r\n  const [menuItems, setMenuItems] = useState([]);\r\n  const [selectedChannel, setSelectedChannel] = useState('');\r\n  const [selectedType, setSelectedType] = useState('');\r\n  const [additionalElement, setAdditionalElement] = useState(null);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState('');\r\n\r\n  useEffect(() => {\r\n    document.title = `LsCo Software - Channel Manager`;\r\n  }, []);\r\n\r\n  const addToken = async () => {\r\n    if (token.trim() === '') {\r\n      setOutputError('You must specify an OAuth Token');\r\n      setOutputData('');\r\n      return;\r\n    } else {\r\n      try {\r\n        const tokens = JSON.parse(localStorage.getItem('tokens')) || [];\r\n\r\n        const validate = await validateToken(token.replace(/^oauth[:]*/i, ''));\r\n\r\n        if (tokens.find((xyz) => xyz.id === validate.user_id.toLowerCase())) {\r\n          setOutputError('The channel already exists');\r\n          setOutputData('');\r\n          return;\r\n        }\r\n\r\n        tokens.push({\r\n          id: validate.user_id,\r\n          login: validate.login,\r\n          access_token: token.replace(/^oauth[:]*/i, ''),\r\n          client_id: validate.client_id\r\n        });\r\n\r\n        localStorage.setItem('tokens', JSON.stringify(tokens));\r\n\r\n        updateChannels();\r\n\r\n        setOutputData('');\r\n        setOutputData(`Successfully added login: ${validate.login} - ID: ${validate.user_id}`);\r\n        return;\r\n      } catch (err) {\r\n        setOutputError(err.message);\r\n        setOutputData('');\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateChannels = () => {\r\n    const tokens = JSON.parse(localStorage.getItem('tokens')) || [];\r\n    const options = tokens.map(({ login, id }) => ({\r\n      value: id,\r\n      label: `${login} - ID: ${id}`\r\n    }));\r\n\r\n    if (options.length >= 1) {\r\n      setMenuItems(options);\r\n    } else {\r\n      setMenuItems([{ value: '', label: 'No Channels' }]);\r\n    }\r\n  };\r\n\r\n  const handleSearchChange = async (value) => {\r\n    if (value.trim() !== '') {\r\n      const response = await fetch(`https://api.twitch.tv/helix/search/channels?query=${value}&first=25`, {\r\n        headers: {\r\n          'Client-Id': '9uavest5z7knsvpbip19fxqkywxz3ec'\r\n        }\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setSearchResults(\r\n          data.data.map((channel) => {\r\n            return {\r\n              name: `${channel.display_name} - ID: ${channel.id}`,\r\n              avatarUrl: channel.thumbnail_url\r\n            };\r\n          })\r\n        );\r\n      } else {\r\n        setSearchResults([]);\r\n      }\r\n    } else {\r\n      setSearchResults([]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateChannels();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setOutputError('');\r\n    setOutputData('');\r\n\r\n    const getMods = async () => {\r\n      if (!selectedChannel) {\r\n        setOutputError('No channel specified');\r\n        setOutputData('');\r\n        return [];\r\n      }\r\n\r\n      const tokens = JSON.parse(localStorage.getItem('tokens')) || [];\r\n\r\n      const index = tokens.findIndex((x) => x.id === selectedChannel);\r\n\r\n      let url = `https://api.twitch.tv/helix/moderation/moderators?first=100&broadcaster_id=${tokens[index].id}`;\r\n      let cursor = null;\r\n      let moderators = [];\r\n\r\n      for (;;) {\r\n        if (cursor) {\r\n          url = `https://api.twitch.tv/helix/moderation/moderators?first=100&broadcaster_id=${tokens[index].id}&after=${cursor}`;\r\n        }\r\n\r\n        const response = await fetch(url, {\r\n          headers: {\r\n            Authorization: `Bearer ${tokens[index].access_token}`,\r\n            'Client-Id': tokens[index].client_id\r\n          }\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (!response.ok) {\r\n          return [];\r\n        }\r\n\r\n        moderators.push(...data.data.map((i) => `${i.user_name} - ID: ${i.user_id}`));\r\n\r\n        if (data.pagination && data.pagination.cursor) {\r\n          cursor = data.pagination.cursor;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      return moderators;\r\n    };\r\n\r\n    const getVips = async () => {\r\n      if (!selectedChannel) {\r\n        setOutputError('No channel specified');\r\n        setOutputData('');\r\n        return [];\r\n      }\r\n\r\n      const tokens = JSON.parse(localStorage.getItem('tokens')) || [];\r\n\r\n      const index = tokens.findIndex((x) => x.id === selectedChannel);\r\n\r\n      let url = `https://api.twitch.tv/helix/channels/vips?first=100&broadcaster_id=${tokens[index].id}`;\r\n      let cursor = null;\r\n      let vips = [];\r\n\r\n      for (;;) {\r\n        if (cursor) {\r\n          url = `https://api.twitch.tv/helix/channels/vips?first=100&broadcaster_id=${tokens[index].id}&after=${cursor}`;\r\n        }\r\n\r\n        const response = await fetch(url, {\r\n          headers: {\r\n            Authorization: `Bearer ${tokens[index].access_token}`,\r\n            'Client-Id': tokens[index].client_id\r\n          }\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (!response.ok) {\r\n          return [];\r\n        }\r\n\r\n        vips.push(...data.data.map((i) => `${i.user_name} - ID: ${i.user_id}`));\r\n\r\n        if (data.pagination && data.pagination.cursor) {\r\n          cursor = data.pagination.cursor;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      return vips;\r\n    };\r\n\r\n    const removeVip = async () => {\r\n      if (!selectedChannel) {\r\n        setOutputError('No channel specified');\r\n        setOutputData('');\r\n        return;\r\n      }\r\n\r\n      const tokens = JSON.parse(localStorage.getItem('tokens')) || [];\r\n\r\n      const index = tokens.findIndex((x) => x.id === selectedChannel);\r\n\r\n      const request = await fetch(\r\n        `https://api.twitch.tv/helix/channels/vips?broadcaster_id=${tokens[index].id}&user_id=${selectedUser.split('- ID: ')[1]}`,\r\n        {\r\n          method: 'DELETE',\r\n          headers: {\r\n            Authorization: `Bearer ${tokens[index].access_token}`,\r\n            'Client-Id': tokens[index].client_id\r\n          }\r\n        }\r\n      );\r\n\r\n      if (!request.ok) {\r\n        const data = await request.json();\r\n\r\n        setOutputError(data.message);\r\n        setOutputData('');\r\n        return;\r\n      }\r\n\r\n      setOutputData('');\r\n      setOutputData(`Successfully removed ${selectedUser.split('- ID: ')[0]} as VIP in ${tokens[index].login}`);\r\n      return;\r\n    };\r\n\r\n    const removeMod = async () => {\r\n      if (!selectedChannel) {\r\n        setOutputError('No channel specified');\r\n        setOutputData('');\r\n        return;\r\n      }\r\n\r\n      const tokens = JSON.parse(localStorage.getItem('tokens')) || [];\r\n\r\n      const index = tokens.findIndex((x) => x.id === selectedChannel);\r\n\r\n      const request = await fetch(\r\n        `https://api.twitch.tv/helix/moderation/moderators?broadcaster_id=${tokens[index].id}&user_id=${selectedUser.split('- ID: ')[1]}`,\r\n        {\r\n          method: 'DELETE',\r\n          headers: {\r\n            Authorization: `Bearer ${tokens[index].access_token}`,\r\n            'Client-Id': tokens[index].client_id\r\n          }\r\n        }\r\n      );\r\n\r\n      if (!request.ok) {\r\n        const data = await request.json();\r\n\r\n        setOutputError(data.message);\r\n        setOutputData('');\r\n        return;\r\n      }\r\n\r\n      setOutputData('');\r\n      setOutputData(`Successfully removed ${selectedUser.split('- ID: ')[0]} as Moderator in ${tokens[index].login}`);\r\n      return;\r\n    };\r\n\r\n    const addVip = async () => {\r\n      if (!selectedChannel) {\r\n        setOutputError('No channel specified');\r\n        setOutputData('');\r\n        return;\r\n      }\r\n\r\n      const tokens = JSON.parse(localStorage.getItem('tokens')) || [];\r\n\r\n      const index = tokens.findIndex((x) => x.id === selectedChannel);\r\n\r\n      const request = await fetch(\r\n        `https://api.twitch.tv/helix/channels/vips?broadcaster_id=${tokens[index].id}&user_id=${selectedUser.split('- ID: ')[1]}`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            Authorization: `Bearer ${tokens[index].access_token}`,\r\n            'Client-Id': tokens[index].client_id\r\n          }\r\n        }\r\n      );\r\n\r\n      if (!request.ok) {\r\n        const data = await request.json();\r\n\r\n        setOutputError(data.message);\r\n        setOutputData('');\r\n        return;\r\n      }\r\n\r\n      setOutputData('');\r\n      setOutputData(`Successfully added ${selectedUser.split('- ID: ')[0]} as VIP in ${tokens[index].login}`);\r\n      return;\r\n    };\r\n\r\n    const addMod = async () => {\r\n      if (!selectedChannel) {\r\n        setOutputError('No channel specified');\r\n        setOutputData('');\r\n        return;\r\n      }\r\n\r\n      const tokens = JSON.parse(localStorage.getItem('tokens')) || [];\r\n\r\n      const index = tokens.findIndex((x) => x.id === selectedChannel);\r\n\r\n      const request = await fetch(\r\n        `https://api.twitch.tv/helix/moderation/moderators?broadcaster_id=${tokens[index].id}&user_id=${selectedUser.split('- ID: ')[1]}`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            Authorization: `Bearer ${tokens[index].access_token}`,\r\n            'Client-Id': tokens[index].client_id\r\n          }\r\n        }\r\n      );\r\n\r\n      if (!request.ok) {\r\n        const data = await request.json();\r\n\r\n        setOutputError(data.message);\r\n        setOutputData('');\r\n        return;\r\n      }\r\n\r\n      setOutputData('');\r\n      setOutputData(`Successfully added ${selectedUser.split('- ID: ')[0]} as Moderator in ${tokens[index].login}`);\r\n      return;\r\n    };\r\n\r\n    const fetchData = async () => {\r\n      if (selectedType === 'add-moderator') {\r\n        setAdditionalElement(\r\n          <React.Fragment>\r\n            <Grid item xs={12}>\r\n              <Autocomplete\r\n                options={searchResults}\r\n                getOptionLabel={(option) => option.name}\r\n                onChange={(event, value) => {\r\n                  setSelectedUser(value);\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    fullWidth\r\n                    id=\"standard-basic\"\r\n                    label=\"User\"\r\n                    variant=\"filled\"\r\n                    onChange={(event) => {\r\n                      handleSearchChange(event.target.value);\r\n                    }}\r\n                  />\r\n                )}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    <Box display=\"flex\" alignItems=\"center\">\r\n                      <Avatar src={option.avatarUrl} alt={option.name} sx={{ width: 25, height: 25, marginRight: 1 }} />\r\n                      {option.name}\r\n                    </Box>\r\n                  </li>\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button variant=\"contained\" fullWidth onClick={addMod}>\r\n                Add\r\n              </Button>\r\n            </Grid>\r\n          </React.Fragment>\r\n        );\r\n      } else if (selectedType === 'add-vip') {\r\n        setAdditionalElement(\r\n          <React.Fragment>\r\n            <Grid item xs={12}>\r\n              <Autocomplete\r\n                options={searchResults}\r\n                getOptionLabel={(option) => option.name}\r\n                onChange={(event, value) => {\r\n                  setSelectedUser(value);\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    fullWidth\r\n                    id=\"standard-basic\"\r\n                    label=\"User\"\r\n                    variant=\"filled\"\r\n                    onChange={(event) => {\r\n                      handleSearchChange(event.target.value);\r\n                    }}\r\n                  />\r\n                )}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    <Box display=\"flex\" alignItems=\"center\">\r\n                      <Avatar src={option.avatarUrl} alt={option.name} sx={{ width: 25, height: 25, marginRight: 1 }} />\r\n                      {option.name}\r\n                    </Box>\r\n                  </li>\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button variant=\"contained\" fullWidth onClick={addVip}>\r\n                Add\r\n              </Button>\r\n            </Grid>\r\n          </React.Fragment>\r\n        );\r\n      } else if (selectedType === 'remove-moderator') {\r\n        const mods = await getMods();\r\n\r\n        const props = {\r\n          options: mods\r\n        };\r\n\r\n        setAdditionalElement(\r\n          <React.Fragment>\r\n            <Grid item xs={12}>\r\n              <Autocomplete\r\n                {...props}\r\n                id=\"disable-close-on-select\"\r\n                onChange={(event, value) => {\r\n                  setSelectedUser(value);\r\n                }}\r\n                renderInput={(params) => <TextField {...params} label=\"Moderator\" variant=\"filled\" />}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button variant=\"contained\" fullWidth onClick={removeMod}>\r\n                Remove\r\n              </Button>\r\n            </Grid>\r\n          </React.Fragment>\r\n        );\r\n      } else if (selectedType === 'remove-vip') {\r\n        const vips = await getVips();\r\n\r\n        const props = {\r\n          options: vips\r\n        };\r\n\r\n        setAdditionalElement(\r\n          <React.Fragment>\r\n            <Grid item xs={12}>\r\n              <Autocomplete\r\n                {...props}\r\n                id=\"disable-close-on-select\"\r\n                onChange={(event, value) => {\r\n                  setSelectedUser(value);\r\n                }}\r\n                renderInput={(params) => <TextField {...params} label=\"VIP\" variant=\"filled\" />}\r\n              />{' '}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button variant=\"contained\" fullWidth onClick={removeVip}>\r\n                Remove\r\n              </Button>\r\n            </Grid>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [selectedType, searchResults, selectedChannel, selectedUser]);\r\n\r\n  const removeToken = async () => {\r\n    if (!selectedChannel) {\r\n      setOutputError('No channel specified');\r\n      setOutputData('');\r\n      return;\r\n    } else {\r\n      try {\r\n        const tokens = localStorage.getItem('tokens') ? JSON.parse(localStorage.getItem('tokens')) : [];\r\n\r\n        const index = tokens.findIndex((x) => x.id === selectedChannel);\r\n\r\n        if (index === -1) {\r\n          setOutputError('There are no channels');\r\n          setOutputData('');\r\n          return;\r\n        }\r\n\r\n        const data = tokens[index];\r\n\r\n        tokens.splice(index, 1);\r\n        localStorage.setItem('tokens', JSON.stringify(tokens));\r\n\r\n        updateChannels();\r\n\r\n        setOutputData('');\r\n        setOutputData(`Successfully removed login: ${data.login} - ID: ${data.id}`);\r\n        return;\r\n      } catch (err) {\r\n        setOutputError(err.message);\r\n        setOutputData('');\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  const validateToken = async (token) => {\r\n    const validateResponse = await fetch('https://id.twitch.tv/oauth2/validate', {\r\n      headers: {\r\n        Authorization: `OAuth ${token}`\r\n      }\r\n    });\r\n\r\n    const validateData = await validateResponse.json();\r\n\r\n    if (!validateResponse.ok) {\r\n      switch (validateData.message) {\r\n        case 'invalid access token':\r\n          throw new Error('Invalid access token');\r\n        default:\r\n          throw new Error(validateData.message || 'Validate token failed');\r\n      }\r\n    }\r\n\r\n    return validateData;\r\n  };\r\n\r\n  const openTokenGenerator = async () => {\r\n    const type = 'token';\r\n    const clientID = '87q7zikx7uny69x0wkxtf8bm4kd5m2';\r\n    const redirectURI = 'https://devlsco.de/callback';\r\n    window.open(\r\n      `https://id.twitch.tv/oauth2/authorize?response_type=${type}&client_id=${clientID}&redirect_uri=${redirectURI}&scope=channel:manage:vips+channel:manage:moderators&force_verify=true`,\r\n      '',\r\n      'scrollbars=no,resizable=no,status=no,location=no,toolbar=no,menubar=no,width=0,height=0,left=-1000,top=-1000'\r\n    );\r\n  };\r\n\r\n  return (\r\n    <MainCard title=\"Channel Manager\" description=\"Add or remove moderators/VIPs from a specific channel.\">\r\n      <Grid container spacing={2} alignItems=\"center\">\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            id=\"standard-basic\"\r\n            label=\"OAuth Token\"\r\n            type=\"password\"\r\n            value={token}\r\n            variant=\"filled\"\r\n            onChange={(e) => setToken(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Button variant=\"contained\" style={{ background: '#2196f3' }} fullWidth onClick={addToken}>\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Button variant=\"contained\" style={{ background: '#ff0000' }} fullWidth onClick={removeToken}>\r\n            Remove\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{ background: 'hsla(0, 0%, 40%, .3)', border: '1px solid #2196f3' }}\r\n            fullWidth\r\n            onClick={openTokenGenerator}\r\n          >\r\n            Generate OAuth Token\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <FormControl fullWidth variant=\"filled\">\r\n            <InputLabel id=\"channel-label\">Channel</InputLabel>\r\n            <Select\r\n              value={selectedChannel}\r\n              onChange={(e) => setSelectedChannel(e.target.value)}\r\n              labelId=\"channel-label\"\r\n              id=\"channel-select\"\r\n            >\r\n              {menuItems.map((menuItem, index) => (\r\n                <MenuItem key={menuItem.value} value={menuItem.value} selected={index === 1}>\r\n                  {menuItem.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <FormControl fullWidth variant=\"filled\">\r\n            <InputLabel id=\"type-label\">Type</InputLabel>\r\n            <Select value={selectedType} onChange={(e) => setSelectedType(e.target.value)} labelId=\"type-label\" id=\"type-select\">\r\n              <MenuItem value=\"add-moderator\">Add Moderator</MenuItem>\r\n              <MenuItem value=\"add-vip\">Add VIP</MenuItem>\r\n              <MenuItem value=\"remove-moderator\">Remove Moderator</MenuItem>\r\n              <MenuItem value=\"remove-vip\">Remove VIP</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        {additionalElement}\r\n        <Grid item xs={12}>\r\n          {outputError && (\r\n            <Typography variant=\"body2\" style={{ color: 'red', marginTop: '10px', textAlign: 'center' }}>\r\n              {outputError}\r\n            </Typography>\r\n          )}\r\n          {outputData && (\r\n            <Typography variant=\"body2\" style={{ marginTop: '10px', textAlign: 'center' }}>\r\n              {outputData}\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </MainCard>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 32,\n  // https://m2.material.io/components/menus#specs > Dense\n  paddingTop: 4,\n  paddingBottom: 4\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n  const {\n      autoFocus = false,\n      component = 'li',\n      dense = false,\n      divider = false,\n      disableGutters = false,\n      focusVisibleClassName,\n      role = 'menuitem',\n      tabIndex: tabIndexProp,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    disableGutters\n  }), [context.dense, dense, disableGutters]);\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      className: clsx(classes.root, className)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * If `true`, the component is selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;"],"names":["Page","token","setToken","useState","outputError","setOutputError","outputData","setOutputData","menuItems","setMenuItems","selectedChannel","setSelectedChannel","selectedType","setSelectedType","additionalElement","setAdditionalElement","searchResults","setSearchResults","selectedUser","setSelectedUser","useEffect","document","title","updateChannels","options","JSON","parse","localStorage","getItem","map","_ref","login","id","value","label","length","handleSearchChange","async","trim","response","fetch","headers","data","json","ok","channel","name","display_name","avatarUrl","thumbnail_url","removeVip","tokens","index","findIndex","x","request","split","method","Authorization","access_token","client_id","message","removeMod","addVip","addMod","_jsxs","React","children","_jsx","Grid","item","xs","Autocomplete","getOptionLabel","option","onChange","event","renderInput","params","TextField","fullWidth","variant","target","renderOption","props","Box","display","alignItems","Avatar","src","alt","sx","width","height","marginRight","Button","onClick","url","cursor","moderators","push","i","user_name","user_id","pagination","getMods","vips","getVips","fetchData","validateToken","validateResponse","validateData","Error","MainCard","description","container","spacing","type","e","style","background","validate","replace","find","xyz","toLowerCase","setItem","stringify","err","splice","border","window","open","FormControl","InputLabel","Select","labelId","menuItem","MenuItem","selected","Typography","color","marginTop","textAlign","getMenuItemUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","MenuItemRoot","styled","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","ownerState","root","dense","divider","disableGutters","gutters","theme","_extends","typography","body1","justifyContent","position","textDecoration","minHeight","paddingTop","paddingBottom","boxSizing","whiteSpace","paddingLeft","paddingRight","borderBottom","vars","palette","backgroundClip","backgroundColor","action","hover","menuItemClasses","primary","mainChannel","selectedOpacity","alpha","main","focusOpacity","hoverOpacity","focus","opacity","disabledOpacity","dividerClasses","marginBottom","marginLeft","listItemTextClasses","listItemIconClasses","minWidth","breakpoints","up","body2","fontSize","inProps","ref","useThemeProps","autoFocus","component","focusVisibleClassName","role","tabIndex","tabIndexProp","className","other","_objectWithoutPropertiesLoose","context","ListContext","childContext","menuItemRef","useEnhancedEffect","current","classes","disabled","slots","composedClasses","composeClasses","useUtilityClasses","handleRef","useForkRef","undefined","clsx","focusVisible"],"sourceRoot":""}