{"version":3,"file":"static/js/169.da5d4769.chunk.js","mappings":"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","sources":["views/marathon/index.js"],"sourcesContent":["import { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { TextField, Button, Grid, Snackbar } from '@mui/material';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst darkTheme = createTheme({\r\n  palette: {\r\n    mode: 'dark'\r\n  }\r\n});\r\n\r\nconst Page = () => {\r\n  useEffect(() => {\r\n    document.title = `LsCo Software - Marathon Manager`;\r\n  }, []);\r\n\r\n  const [moderationAction, setModerationAction] = useState(localStorage.getItem('marathon_moderation_action') ?? 0);\r\n  const [moderationActionTotal, setModerationActionTotal] = useState(localStorage.getItem('marathon_moderation_action_total') ?? 0);\r\n  const [moderationActionNeed, setModerationActionNeed] = useState(localStorage.getItem('marathon_moderation_action_need') ?? 0);\r\n  const [currentSubCount, setCurrentSubCount] = useState(localStorage.getItem('marathon_subs') ?? 0);\r\n  const [updateNoti, setUpdateNoti] = useState(false);\r\n\r\n  function resetWorkspace() {\r\n    localStorage.setItem('marathon_subs', 0);\r\n    localStorage.setItem('marathon_moderation_action', 0);\r\n    localStorage.setItem('marathon_moderation_action_need', 0);\r\n    setCurrentSubCount(0);\r\n    setModerationAction(0);\r\n    setModerationActionNeed(0);\r\n\r\n    setUpdateNoti(true);\r\n  }\r\n\r\n  function updateStats() {\r\n    localStorage.setItem('marathon_moderation_subs', currentSubCount);\r\n    localStorage.setItem('marathon_moderation_action', moderationAction);\r\n    localStorage.setItem('marathon_moderation_action_total', moderationActionTotal);\r\n    localStorage.setItem('marathon_moderation_action_need', moderationActionNeed);\r\n\r\n    setUpdateNoti(true);\r\n  }\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setUpdateNoti(false);\r\n  };\r\n\r\n  return (\r\n    <MainCard sx={{ m: 2 }} title=\"Marathon Manager\" description=\"Here you can change your marathon attitude.\">\r\n      <Grid container spacing={2} alignItems=\"center\">\r\n        <Grid item xs={12} sm={6}>\r\n          <ThemeProvider theme={darkTheme}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              label=\"Workspace Subs\"\r\n              type=\"number\"\r\n              variant=\"outlined\"\r\n              value={currentSubCount}\r\n              onChange={(e) => setCurrentSubCount(e.target.value)}\r\n            />\r\n          </ThemeProvider>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <ThemeProvider theme={darkTheme}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              label=\"Workspace Mod Actions\"\r\n              type=\"number\"\r\n              variant=\"outlined\"\r\n              value={moderationAction}\r\n              onChange={(e) => setModerationAction(e.target.value)}\r\n            />\r\n          </ThemeProvider>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <ThemeProvider theme={darkTheme}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              label=\"Workspace Need Mod Actions\"\r\n              type=\"number\"\r\n              variant=\"outlined\"\r\n              value={moderationActionNeed}\r\n              onChange={(e) => setModerationActionNeed(e.target.value)}\r\n            />\r\n          </ThemeProvider>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <ThemeProvider theme={darkTheme}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              label=\"Total Mod Actions\"\r\n              type=\"number\"\r\n              variant=\"outlined\"\r\n              value={moderationActionTotal}\r\n              onChange={(e) => setModerationActionTotal(e.target.value)}\r\n            />\r\n          </ThemeProvider>\r\n        </Grid>\r\n        <Grid item xs={12} sm={10}>\r\n          <Button variant=\"contained\" fullWidth onClick={updateStats}>\r\n            Update\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={12} sm={2}>\r\n          <Button variant=\"text\" color=\"error\" fullWidth onClick={resetWorkspace}>\r\n            Reset Workspace\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Snackbar\r\n        open={updateNoti}\r\n        autoHideDuration={2.5 * 1000}\r\n        onClose={handleCloseSnackbar}\r\n        severity=\"info\"\r\n        message=\"Successfully updated!\"\r\n      />\r\n    </MainCard>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n"],"names":["darkTheme","createTheme","palette","mode","Page","_localStorage$getItem","_localStorage$getItem2","_localStorage$getItem3","_localStorage$getItem4","useEffect","document","title","moderationAction","setModerationAction","useState","localStorage","getItem","moderationActionTotal","setModerationActionTotal","moderationActionNeed","setModerationActionNeed","currentSubCount","setCurrentSubCount","updateNoti","setUpdateNoti","_jsxs","MainCard","sx","m","description","children","Grid","container","spacing","alignItems","_jsx","item","xs","sm","ThemeProvider","theme","TextField","fullWidth","id","label","type","variant","value","onChange","e","target","Button","onClick","setItem","color","Snackbar","open","autoHideDuration","onClose","handleCloseSnackbar","severity","message"],"sourceRoot":""}