{"version":3,"file":"static/js/347.d9b7ad8b.chunk.js","mappings":"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","sources":["../node_modules/normalize-url/index.js","views/twitch/filesay/index.js"],"sourcesContent":["// https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\nconst DATA_URL_DEFAULT_MIME_TYPE = 'text/plain';\nconst DATA_URL_DEFAULT_CHARSET = 'us-ascii';\n\nconst testParameter = (name, filters) => filters.some(filter => filter instanceof RegExp ? filter.test(name) : filter === name);\n\nconst supportedProtocols = new Set([\n\t'https:',\n\t'http:',\n\t'file:',\n]);\n\nconst hasCustomProtocol = urlString => {\n\ttry {\n\t\tconst {protocol} = new URL(urlString);\n\t\treturn protocol.endsWith(':') && !supportedProtocols.has(protocol);\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nconst normalizeDataURL = (urlString, {stripHash}) => {\n\tconst match = /^data:(?<type>[^,]*?),(?<data>[^#]*?)(?:#(?<hash>.*))?$/.exec(urlString);\n\n\tif (!match) {\n\t\tthrow new Error(`Invalid URL: ${urlString}`);\n\t}\n\n\tlet {type, data, hash} = match.groups;\n\tconst mediaType = type.split(';');\n\thash = stripHash ? '' : hash;\n\n\tlet isBase64 = false;\n\tif (mediaType[mediaType.length - 1] === 'base64') {\n\t\tmediaType.pop();\n\t\tisBase64 = true;\n\t}\n\n\t// Lowercase MIME type\n\tconst mimeType = mediaType.shift()?.toLowerCase() ?? '';\n\tconst attributes = mediaType\n\t\t.map(attribute => {\n\t\t\tlet [key, value = ''] = attribute.split('=').map(string => string.trim());\n\n\t\t\t// Lowercase `charset`\n\t\t\tif (key === 'charset') {\n\t\t\t\tvalue = value.toLowerCase();\n\n\t\t\t\tif (value === DATA_URL_DEFAULT_CHARSET) {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn `${key}${value ? `=${value}` : ''}`;\n\t\t})\n\t\t.filter(Boolean);\n\n\tconst normalizedMediaType = [\n\t\t...attributes,\n\t];\n\n\tif (isBase64) {\n\t\tnormalizedMediaType.push('base64');\n\t}\n\n\tif (normalizedMediaType.length > 0 || (mimeType && mimeType !== DATA_URL_DEFAULT_MIME_TYPE)) {\n\t\tnormalizedMediaType.unshift(mimeType);\n\t}\n\n\treturn `data:${normalizedMediaType.join(';')},${isBase64 ? data.trim() : data}${hash ? `#${hash}` : ''}`;\n};\n\nexport default function normalizeUrl(urlString, options) {\n\toptions = {\n\t\tdefaultProtocol: 'http',\n\t\tnormalizeProtocol: true,\n\t\tforceHttp: false,\n\t\tforceHttps: false,\n\t\tstripAuthentication: true,\n\t\tstripHash: false,\n\t\tstripTextFragment: true,\n\t\tstripWWW: true,\n\t\tremoveQueryParameters: [/^utm_\\w+/i],\n\t\tremoveTrailingSlash: true,\n\t\tremoveSingleSlash: true,\n\t\tremoveDirectoryIndex: false,\n\t\tremoveExplicitPort: false,\n\t\tsortQueryParameters: true,\n\t\t...options,\n\t};\n\n\t// Legacy: Append `:` to the protocol if missing.\n\tif (typeof options.defaultProtocol === 'string' && !options.defaultProtocol.endsWith(':')) {\n\t\toptions.defaultProtocol = `${options.defaultProtocol}:`;\n\t}\n\n\turlString = urlString.trim();\n\n\t// Data URL\n\tif (/^data:/i.test(urlString)) {\n\t\treturn normalizeDataURL(urlString, options);\n\t}\n\n\tif (hasCustomProtocol(urlString)) {\n\t\treturn urlString;\n\t}\n\n\tconst hasRelativeProtocol = urlString.startsWith('//');\n\tconst isRelativeUrl = !hasRelativeProtocol && /^\\.*\\//.test(urlString);\n\n\t// Prepend protocol\n\tif (!isRelativeUrl) {\n\t\turlString = urlString.replace(/^(?!(?:\\w+:)?\\/\\/)|^\\/\\//, options.defaultProtocol);\n\t}\n\n\tconst urlObject = new URL(urlString);\n\n\tif (options.forceHttp && options.forceHttps) {\n\t\tthrow new Error('The `forceHttp` and `forceHttps` options cannot be used together');\n\t}\n\n\tif (options.forceHttp && urlObject.protocol === 'https:') {\n\t\turlObject.protocol = 'http:';\n\t}\n\n\tif (options.forceHttps && urlObject.protocol === 'http:') {\n\t\turlObject.protocol = 'https:';\n\t}\n\n\t// Remove auth\n\tif (options.stripAuthentication) {\n\t\turlObject.username = '';\n\t\turlObject.password = '';\n\t}\n\n\t// Remove hash\n\tif (options.stripHash) {\n\t\turlObject.hash = '';\n\t} else if (options.stripTextFragment) {\n\t\turlObject.hash = urlObject.hash.replace(/#?:~:text.*?$/i, '');\n\t}\n\n\t// Remove duplicate slashes if not preceded by a protocol\n\t// NOTE: This could be implemented using a single negative lookbehind\n\t// regex, but we avoid that to maintain compatibility with older js engines\n\t// which do not have support for that feature.\n\tif (urlObject.pathname) {\n\t\t// TODO: Replace everything below with `urlObject.pathname = urlObject.pathname.replace(/(?<!\\b[a-z][a-z\\d+\\-.]{1,50}:)\\/{2,}/g, '/');` when Safari supports negative lookbehind.\n\n\t\t// Split the string by occurrences of this protocol regex, and perform\n\t\t// duplicate-slash replacement on the strings between those occurrences\n\t\t// (if any).\n\t\tconst protocolRegex = /\\b[a-z][a-z\\d+\\-.]{1,50}:\\/\\//g;\n\n\t\tlet lastIndex = 0;\n\t\tlet result = '';\n\t\tfor (;;) {\n\t\t\tconst match = protocolRegex.exec(urlObject.pathname);\n\t\t\tif (!match) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst protocol = match[0];\n\t\t\tconst protocolAtIndex = match.index;\n\t\t\tconst intermediate = urlObject.pathname.slice(lastIndex, protocolAtIndex);\n\n\t\t\tresult += intermediate.replace(/\\/{2,}/g, '/');\n\t\t\tresult += protocol;\n\t\t\tlastIndex = protocolAtIndex + protocol.length;\n\t\t}\n\n\t\tconst remnant = urlObject.pathname.slice(lastIndex, urlObject.pathname.length);\n\t\tresult += remnant.replace(/\\/{2,}/g, '/');\n\n\t\turlObject.pathname = result;\n\t}\n\n\t// Decode URI octets\n\tif (urlObject.pathname) {\n\t\ttry {\n\t\t\turlObject.pathname = decodeURI(urlObject.pathname);\n\t\t} catch {}\n\t}\n\n\t// Remove directory index\n\tif (options.removeDirectoryIndex === true) {\n\t\toptions.removeDirectoryIndex = [/^index\\.[a-z]+$/];\n\t}\n\n\tif (Array.isArray(options.removeDirectoryIndex) && options.removeDirectoryIndex.length > 0) {\n\t\tlet pathComponents = urlObject.pathname.split('/');\n\t\tconst lastComponent = pathComponents[pathComponents.length - 1];\n\n\t\tif (testParameter(lastComponent, options.removeDirectoryIndex)) {\n\t\t\tpathComponents = pathComponents.slice(0, -1);\n\t\t\turlObject.pathname = pathComponents.slice(1).join('/') + '/';\n\t\t}\n\t}\n\n\tif (urlObject.hostname) {\n\t\t// Remove trailing dot\n\t\turlObject.hostname = urlObject.hostname.replace(/\\.$/, '');\n\n\t\t// Remove `www.`\n\t\tif (options.stripWWW && /^www\\.(?!www\\.)[a-z\\-\\d]{1,63}\\.[a-z.\\-\\d]{2,63}$/.test(urlObject.hostname)) {\n\t\t\t// Each label should be max 63 at length (min: 1).\n\t\t\t// Source: https://en.wikipedia.org/wiki/Hostname#Restrictions_on_valid_host_names\n\t\t\t// Each TLD should be up to 63 characters long (min: 2).\n\t\t\t// It is technically possible to have a single character TLD, but none currently exist.\n\t\t\turlObject.hostname = urlObject.hostname.replace(/^www\\./, '');\n\t\t}\n\t}\n\n\t// Remove query unwanted parameters\n\tif (Array.isArray(options.removeQueryParameters)) {\n\t\t// eslint-disable-next-line unicorn/no-useless-spread -- We are intentionally spreading to get a copy.\n\t\tfor (const key of [...urlObject.searchParams.keys()]) {\n\t\t\tif (testParameter(key, options.removeQueryParameters)) {\n\t\t\t\turlObject.searchParams.delete(key);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!Array.isArray(options.keepQueryParameters) && options.removeQueryParameters === true) {\n\t\turlObject.search = '';\n\t}\n\n\t// Keep wanted query parameters\n\tif (Array.isArray(options.keepQueryParameters) && options.keepQueryParameters.length > 0) {\n\t\t// eslint-disable-next-line unicorn/no-useless-spread -- We are intentionally spreading to get a copy.\n\t\tfor (const key of [...urlObject.searchParams.keys()]) {\n\t\t\tif (!testParameter(key, options.keepQueryParameters)) {\n\t\t\t\turlObject.searchParams.delete(key);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Sort query parameters\n\tif (options.sortQueryParameters) {\n\t\turlObject.searchParams.sort();\n\n\t\t// Calling `.sort()` encodes the search parameters, so we need to decode them again.\n\t\ttry {\n\t\t\turlObject.search = decodeURIComponent(urlObject.search);\n\t\t} catch {}\n\t}\n\n\tif (options.removeTrailingSlash) {\n\t\turlObject.pathname = urlObject.pathname.replace(/\\/$/, '');\n\t}\n\n\t// Remove an explicit port number, excluding a default port number, if applicable\n\tif (options.removeExplicitPort && urlObject.port) {\n\t\turlObject.port = '';\n\t}\n\n\tconst oldUrlString = urlString;\n\n\t// Take advantage of many of the Node `url` normalizations\n\turlString = urlObject.toString();\n\n\tif (!options.removeSingleSlash && urlObject.pathname === '/' && !oldUrlString.endsWith('/') && urlObject.hash === '') {\n\t\turlString = urlString.replace(/\\/$/, '');\n\t}\n\n\t// Remove ending `/` unless removeSingleSlash is false\n\tif ((options.removeTrailingSlash || urlObject.pathname === '/') && urlObject.hash === '' && options.removeSingleSlash) {\n\t\turlString = urlString.replace(/\\/$/, '');\n\t}\n\n\t// Restore relative protocol, if applicable\n\tif (hasRelativeProtocol && !options.normalizeProtocol) {\n\t\turlString = urlString.replace(/^http:\\/\\//, '//');\n\t}\n\n\t// Remove http/https\n\tif (options.stripProtocol) {\n\t\turlString = urlString.replace(/^(?:https?:)?\\/\\//, '');\n\t}\n\n\treturn urlString;\n}\n","import { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport {\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  MenuItem,\r\n  Box,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n  Slider,\r\n  Avatar,\r\n  Autocomplete\r\n} from '@mui/material';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst urlRegEx = /^https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_.+~#?&/=]*)$/i;\r\nimport normalizeUrl from 'normalize-url';\r\n\r\nconst darkTheme = createTheme({\r\n  palette: {\r\n    mode: 'dark'\r\n  }\r\n});\r\n\r\nconst marks = [\r\n  {\r\n    value: 25,\r\n    label: '25'\r\n  },\r\n  {\r\n    value: 100,\r\n    label: '100'\r\n  },\r\n  {\r\n    value: 250,\r\n    label: '250'\r\n  },\r\n  {\r\n    value: 500,\r\n    label: '500'\r\n  },\r\n  {\r\n    value: 750,\r\n    label: '750'\r\n  },\r\n  {\r\n    value: 1000,\r\n    label: '1000'\r\n  }\r\n];\r\n\r\nfunction valuetext(value) {\r\n  return `${value}ms`;\r\n}\r\n\r\nasync function getName(id) {\r\n  if (!id) return null;\r\n\r\n  const response = await fetch(`https://api.twitch.tv/helix/users?id=${encodeURIComponent(id)}`, {\r\n    responseType: 'json',\r\n    throwHttpErrors: false,\r\n    headers: {\r\n      Authorization: 'Bearer ' + JSON.parse(localStorage.getItem('login')).access_token,\r\n      'Client-ID': JSON.parse(localStorage.getItem('login')).client_id\r\n    }\r\n  });\r\n\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message ? `${data.error}, ${data.message}` : response.statusText);\r\n  }\r\n\r\n  if (!data.data[0]) {\r\n    throw new Error('Login not found.');\r\n  }\r\n\r\n  return data.data[0].login;\r\n}\r\n\r\nfunction chunkArray(array, size) {\r\n  let result = [];\r\n  for (let i = 0; i < array.length; i += size) {\r\n    let chunk = array.slice(i, i + size);\r\n    result.push(chunk);\r\n  }\r\n  return result;\r\n}\r\n\r\nconst Page = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [outputData, setOutputData] = useState(null);\r\n  const [outputError, setOutputError] = useState(null);\r\n  const [selectedType, setSelectedType] = useState('');\r\n  const [channel, setChannel] = useState('');\r\n  const [sliderValue, setSliderValue] = useState(100);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    document.title = `LsCo Software - Filesay`;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const login = localStorage.getItem('login') || null;\r\n\r\n    if (!login) {\r\n      setOutputData('Log in to get started.');\r\n      setOutputError(null);\r\n    }\r\n  }, []);\r\n\r\n  async function banUser(channelID, users) {\r\n    try {\r\n      await Promise.all(\r\n        chunkArray(users, 100).map(async (chunk) => {\r\n          const response = await fetch(`https://api.twitch.tv/helix/users?login=${chunk.map((data) => data.login).join('&login=')}`, {\r\n            headers: {\r\n              Authorization: 'Bearer ' + JSON.parse(localStorage.getItem('login')).access_token,\r\n              'Client-ID': JSON.parse(localStorage.getItem('login')).client_id\r\n            }\r\n          });\r\n          const data = await response.json();\r\n          if (!response.ok) throw new Error(`API Error -> Status: ${data.error}, ${data.status} - ${data.message}`);\r\n\r\n          data.data.forEach((user) => {\r\n            const existingUser = users.find((u) => u.login === user.login);\r\n            if (existingUser) existingUser.id = user.id;\r\n          });\r\n\r\n          return data.data.map((user) => user.id);\r\n        })\r\n      );\r\n\r\n      for (let i = 0; i < users.length; i++) {\r\n        const data = users[i];\r\n\r\n        fetch(\r\n          `https://api.twitch.tv/helix/moderation/bans?broadcaster_id=${channelID}&moderator_id=${\r\n            JSON.parse(localStorage.getItem('login')).id\r\n          }`,\r\n          {\r\n            method: 'POST',\r\n            headers: {\r\n              Authorization: 'Bearer ' + JSON.parse(localStorage.getItem('login')).access_token,\r\n              'Client-ID': JSON.parse(localStorage.getItem('login')).client_id,\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ data: { user_id: data.id, reason: data.reason } })\r\n          }\r\n        );\r\n\r\n        await new Promise((x) => setTimeout(x, sliderValue));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(`Error: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async function timeoutUser(channelID, users) {\r\n    try {\r\n      await Promise.all(\r\n        chunkArray(users, 100).map(async (chunk) => {\r\n          const response = await fetch(`https://api.twitch.tv/helix/users?login=${chunk.map((data) => data.login).join('&login=')}`, {\r\n            headers: {\r\n              Authorization: 'Bearer ' + JSON.parse(localStorage.getItem('login')).access_token,\r\n              'Client-ID': JSON.parse(localStorage.getItem('login')).client_id\r\n            }\r\n          });\r\n          const data = await response.json();\r\n          if (!response.ok) throw new Error(`API Error -> Status: ${data.error}, ${data.status} - ${data.message}`);\r\n\r\n          data.data.forEach((user) => {\r\n            const existingUser = users.find((u) => u.login === user.login);\r\n            if (existingUser) existingUser.id = user.id;\r\n          });\r\n\r\n          return data.data.map((user) => user.id);\r\n        })\r\n      );\r\n\r\n      for (let i = 0; i < users.length; i++) {\r\n        const data = users[i];\r\n\r\n        fetch(\r\n          `https://api.twitch.tv/helix/moderation/bans?broadcaster_id=${channelID}&moderator_id=${\r\n            JSON.parse(localStorage.getItem('login')).id\r\n          }`,\r\n          {\r\n            method: 'POST',\r\n            headers: {\r\n              Authorization: 'Bearer ' + JSON.parse(localStorage.getItem('login')).access_token,\r\n              'Client-ID': JSON.parse(localStorage.getItem('login')).client_id,\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ data: { user_id: data.id, duration: Number(data.duration), reason: data.reason } })\r\n          }\r\n        );\r\n\r\n        await new Promise((x) => setTimeout(x, sliderValue));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(`Error: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async function banUser_id(channelID, users) {\r\n    try {\r\n      for (let i = 0; i < users.length; i++) {\r\n        const data = users[i];\r\n\r\n        fetch(\r\n          `https://api.twitch.tv/helix/moderation/bans?broadcaster_id=${channelID}&moderator_id=${\r\n            JSON.parse(localStorage.getItem('login')).id\r\n          }`,\r\n          {\r\n            method: 'POST',\r\n            headers: {\r\n              Authorization: 'Bearer ' + JSON.parse(localStorage.getItem('login')).access_token,\r\n              'Client-ID': JSON.parse(localStorage.getItem('login')).client_id,\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ data: { user_id: data.id, reason: data.reason } })\r\n          }\r\n        );\r\n\r\n        await new Promise((x) => setTimeout(x, sliderValue));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(`Error: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async function timeoutUser_id(channelID, users) {\r\n    try {\r\n      for (let i = 0; i < users.length; i++) {\r\n        const data = users[i];\r\n\r\n        fetch(\r\n          `https://api.twitch.tv/helix/moderation/bans?broadcaster_id=${channelID}&moderator_id=${\r\n            JSON.parse(localStorage.getItem('login')).id\r\n          }`,\r\n          {\r\n            method: 'POST',\r\n            headers: {\r\n              Authorization: 'Bearer ' + JSON.parse(localStorage.getItem('login')).access_token,\r\n              'Client-ID': JSON.parse(localStorage.getItem('login')).client_id,\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ data: { user_id: data.id, duration: Number(data.duration), reason: data.reason } })\r\n          }\r\n        );\r\n\r\n        await new Promise((x) => setTimeout(x, sliderValue));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(`Error: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async function unbanUser(channelID, users) {\r\n    try {\r\n      await Promise.all(\r\n        chunkArray(users, 100).map(async (chunk) => {\r\n          const response = await fetch(`https://api.twitch.tv/helix/users?login=${chunk.map((data) => data.login).join('&login=')}`, {\r\n            headers: {\r\n              Authorization: 'Bearer ' + JSON.parse(localStorage.getItem('login')).access_token,\r\n              'Client-ID': JSON.parse(localStorage.getItem('login')).client_id\r\n            }\r\n          });\r\n          const data = await response.json();\r\n          if (!response.ok) throw new Error(`API Error -> Status: ${data.error}, ${data.status} - ${data.message}`);\r\n\r\n          data.data.forEach((user) => {\r\n            const existingUser = users.find((u) => u.login === user.login);\r\n            if (existingUser) existingUser.id = user.id;\r\n          });\r\n\r\n          return data.data.map((user) => user.id);\r\n        })\r\n      );\r\n\r\n      for (let i = 0; i < users.length; i++) {\r\n        const data = users[i];\r\n\r\n        fetch(\r\n          `https://api.twitch.tv/helix/moderation/bans?broadcaster_id=${channelID}&moderator_id=${\r\n            JSON.parse(localStorage.getItem('login')).id\r\n          }&user_id=${data.id}`,\r\n          {\r\n            method: 'DELETE',\r\n            headers: {\r\n              Authorization: 'Bearer ' + JSON.parse(localStorage.getItem('login')).access_token,\r\n              'Client-ID': JSON.parse(localStorage.getItem('login')).client_id,\r\n              'Content-Type': 'application/json'\r\n            }\r\n          }\r\n        );\r\n\r\n        await new Promise((x) => setTimeout(x, sliderValue));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(`Error: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async function unbanUser_id(channelID, users) {\r\n    try {\r\n      for (let i = 0; i < users.length; i++) {\r\n        const data = users[i];\r\n\r\n        fetch(\r\n          `https://api.twitch.tv/helix/moderation/bans?broadcaster_id=${channelID}&moderator_id=${\r\n            JSON.parse(localStorage.getItem('login')).id\r\n          }&user_id=${data.id}`,\r\n          {\r\n            method: 'DELETE',\r\n            headers: {\r\n              Authorization: 'Bearer ' + JSON.parse(localStorage.getItem('login')).access_token,\r\n              'Client-ID': JSON.parse(localStorage.getItem('login')).client_id,\r\n              'Content-Type': 'application/json'\r\n            }\r\n          }\r\n        );\r\n        await new Promise((x) => setTimeout(x, sliderValue));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(`Error: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  const handleSearchChange = async (value) => {\r\n    if (!localStorage.getItem('login')) {\r\n      return setSearchResults([]);\r\n    }\r\n\r\n    if (value.trim() !== '') {\r\n      const response = await fetch(`https://api.twitch.tv/helix/search/channels?query=${value}&first=25`, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + JSON.parse(localStorage.getItem('login')).access_token,\r\n          'Client-ID': JSON.parse(localStorage.getItem('login')).client_id\r\n        }\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setSearchResults(\r\n          data.data.map((channel) => {\r\n            return {\r\n              name: channel.display_name,\r\n              id: channel.id,\r\n              avatarUrl: channel.thumbnail_url.replace('300x300', '50x50')\r\n            };\r\n          })\r\n        );\r\n      } else {\r\n        setSearchResults([]);\r\n      }\r\n    } else {\r\n      setSearchResults([]);\r\n    }\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    if (!localStorage.getItem('login')) {\r\n      setOutputData(null);\r\n      setOutputError('Log in to get started.');\r\n      return;\r\n    }\r\n\r\n    if (!channel) {\r\n      setOutputData(null);\r\n      setOutputError('You must specify a channel');\r\n      return;\r\n    }\r\n\r\n    if (!selectedType) {\r\n      setOutputData(null);\r\n      setOutputError('You must specify a filesay type');\r\n      return;\r\n    }\r\n\r\n    if (!message.trim()) {\r\n      setOutputData(null);\r\n      setOutputError('You must specify a filesay list');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const channelID = channel.id;\r\n      const text = message.split(/\\r?\\n/).map((x) => x.trim());\r\n      let type;\r\n\r\n      if (text.length >= 2500) {\r\n        setOutputData(null);\r\n        setOutputError('You have too many lines.');\r\n        return;\r\n      }\r\n\r\n      setOutputData(null);\r\n      setOutputError(null);\r\n\r\n      if (selectedType === 'ban-list-id') {\r\n        type = 4;\r\n      } else if (selectedType === 'unban-list-id') {\r\n        type = 3;\r\n      } else if (selectedType === 'ban-list-name') {\r\n        type = 2;\r\n      } else if (selectedType === 'unban-list-name') {\r\n        type = 1;\r\n      } else {\r\n        type = 0;\r\n      }\r\n\r\n      const messages = [];\r\n      const timeouts = [];\r\n      const timeouts_id = [];\r\n      const unbans = [];\r\n      const bans = [];\r\n      const unbans_id = [];\r\n      const bans_id = [];\r\n\r\n      for (let i = 0; i < text.length; i++) {\r\n        const line = text[i];\r\n\r\n        if (!line) continue;\r\n\r\n        if (urlRegEx.test(line)) {\r\n          let list;\r\n          try {\r\n            const url = new URL(normalizeUrl(line));\r\n            const listURL = url.toString();\r\n            const response = await fetch(listURL);\r\n            const contentType = response.headers.get('content-type');\r\n            if (!contentType || !contentType.match(/text\\/plain;\\scharset=UTF-8/i)) {\r\n              setOutputData(null);\r\n              setOutputError('Invalid raw data.');\r\n              return;\r\n            }\r\n            const data = await response.text();\r\n            list = data.split(/\\r?\\n/).map((x) => x.trim());\r\n          } catch (error) {\r\n            console.log(error);\r\n            setOutputData(null);\r\n            setOutputError(\"Couldn't fetch list\");\r\n            return;\r\n          }\r\n\r\n          for (let ii = 0; ii < list.length; ii++) {\r\n            const line_ = list[ii];\r\n            switch (type) {\r\n              case 0: {\r\n                switch (true) {\r\n                  case line_.match(/^(\\.|\\/)timeout\\s\\w+\\s(\\d+)(\\s.+)?/i) !== null: {\r\n                    const [, login, duration, ...reason] = line_.split(/\\s+/);\r\n                    if (!timeouts.find((x) => x.login === login.toLowerCase())) {\r\n                      timeouts.push({ login: login.toLowerCase(), duration: duration, reason: reason.join(' ') || '' });\r\n                    }\r\n                    break;\r\n                  }\r\n                  case line_.match(/^(\\.|\\/)ban\\s\\w+(\\s.+)?/i) !== null: {\r\n                    const [, login, ...reason] = line_.split(/\\s+/);\r\n                    if (!bans.find((x) => x.login === login.toLowerCase())) {\r\n                      bans.push({ login: login.toLowerCase(), reason: reason.join(' ') || '' });\r\n                    }\r\n                    break;\r\n                  }\r\n                  case line_.match(/^(\\.|\\/)unban\\s\\w+/i) !== null || line_.match(/^(\\.|\\/)untimeout\\s\\w+/i) !== null: {\r\n                    const [, login] = line_.split(/\\s+/);\r\n                    if (!unbans.find((x) => x.login === login.toLowerCase())) {\r\n                      unbans.push({ login: login.toLowerCase() });\r\n                    }\r\n                    break;\r\n                  }\r\n                  case line_.match(/^(\\.|\\/)timeoutid\\s\\w+\\s(\\d+)(\\s.+)?/i) !== null: {\r\n                    const [, id, duration, ...reason] = line_.split(/\\s+/);\r\n                    if (!timeouts_id.find((x) => x.id === id)) {\r\n                      timeouts_id.push({ id: id, duration: duration, reason: reason.join(' ') || '' });\r\n                    }\r\n                    break;\r\n                  }\r\n                  case line_.match(/^(\\.|\\/)banid\\s\\w+(\\s.+)?/i) !== null: {\r\n                    const [, id, ...reason] = line_.split(/\\s+/);\r\n                    if (!bans_id.find((x) => x.id === id)) {\r\n                      bans_id.push({ id: id, reason: reason.join(' ') || '' });\r\n                    }\r\n                    break;\r\n                  }\r\n                  case line_.match(/^(\\.|\\/)unbanid\\s\\w+/i) !== null || line_.match(/^(\\.|\\/)untimeoutid\\s\\w+/i) !== null: {\r\n                    const [, id] = line_.split(/\\s+/);\r\n                    if (!unbans_id.find((x) => x.id === id)) {\r\n                      unbans_id.push({ id: id });\r\n                    }\r\n                    break;\r\n                  }\r\n                  default: {\r\n                    messages.push({ message: line_ });\r\n                    break;\r\n                  }\r\n                }\r\n                break;\r\n              }\r\n              case 1: {\r\n                const [login] = line_.split(/\\s+/);\r\n                if (!unbans.find((x) => x.login === login.toLowerCase())) {\r\n                  unbans.push({ login: login.toLowerCase() });\r\n                }\r\n                break;\r\n              }\r\n              case 2: {\r\n                const [login, ...reason] = line_.split(/\\s+/);\r\n                if (!bans.find((x) => x.login === login.toLowerCase())) {\r\n                  bans.push({\r\n                    login: login.toLowerCase(),\r\n                    reason: reason ? reason.join(' ') : `Ban-list`\r\n                  });\r\n                }\r\n                break;\r\n              }\r\n              case 3: {\r\n                const [id] = line_.split(/\\s+/);\r\n                if (!unbans.find((x) => x.id === id)) {\r\n                  unbans_id.push({ id: id });\r\n                }\r\n                break;\r\n              }\r\n              case 4: {\r\n                const [id, ...reason] = line_.split(/\\s+/);\r\n                if (!bans.find((x) => x.id === id)) {\r\n                  bans_id.push({ id: id, reason: reason ? reason.join(' ') : `Ban-list` });\r\n                }\r\n                break;\r\n              }\r\n              default: {\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          switch (type) {\r\n            case 0: {\r\n              switch (true) {\r\n                case line.match(/^(\\.|\\/)timeout\\s\\w+\\s(\\d+)(\\s.+)?/i) !== null: {\r\n                  const [, login, duration, ...reason] = line.split(/\\s+/);\r\n                  if (!timeouts.find((x) => x.login === login.toLowerCase())) {\r\n                    timeouts.push({ login: login.toLowerCase(), duration: duration, reason: reason.join(' ') || '' });\r\n                  }\r\n                  break;\r\n                }\r\n                case line.match(/^(\\.|\\/)ban\\s\\w+(\\s.+)?/i) !== null: {\r\n                  const [, login, ...reason] = line.split(/\\s+/);\r\n                  if (!bans.find((x) => x.login === login.toLowerCase())) {\r\n                    bans.push({ login: login.toLowerCase(), reason: reason.join(' ') || '' });\r\n                  }\r\n                  break;\r\n                }\r\n                case line.match(/^(\\.|\\/)unban\\s\\w+/i) !== null || line.match(/^(\\.|\\/)untimeout\\s\\w+/i) !== null: {\r\n                  const [, login] = line.split(/\\s+/);\r\n                  if (!unbans.find((x) => x.login === login.toLowerCase())) {\r\n                    unbans.push({ login: login.toLowerCase() });\r\n                  }\r\n                  break;\r\n                }\r\n                case line.match(/^(\\.|\\/)timeoutid\\s\\w+\\s(\\d+)(\\s.+)?/i) !== null: {\r\n                  const [, id, duration, ...reason] = line.split(/\\s+/);\r\n                  if (!timeouts_id.find((x) => x.id === id)) {\r\n                    timeouts_id.push({ id: id, duration: duration, reason: reason.join(' ') || '' });\r\n                  }\r\n                  break;\r\n                }\r\n                case line.match(/^(\\.|\\/)banid\\s\\w+(\\s.+)?/i) !== null: {\r\n                  const [, id, ...reason] = line.split(/\\s+/);\r\n                  if (!bans_id.find((x) => x.id === id)) {\r\n                    bans_id.push({ id: id, reason: reason.join(' ') || '' });\r\n                  }\r\n                  break;\r\n                }\r\n                case line.match(/^(\\.|\\/)unbanid\\s\\w+/i) !== null || line.match(/^(\\.|\\/)untimeoutid\\s\\w+/i) !== null: {\r\n                  const [, id] = line.split(/\\s+/);\r\n                  if (!unbans_id.find((x) => x.id === id)) {\r\n                    unbans_id.push({ id: id });\r\n                  }\r\n                  break;\r\n                }\r\n                default: {\r\n                  messages.push({ message: line });\r\n                  break;\r\n                }\r\n              }\r\n              break;\r\n            }\r\n            case 1: {\r\n              const [login] = line.split(/\\s+/);\r\n              if (!unbans.find((x) => x.login === login.toLowerCase())) {\r\n                unbans.push({ login: login.toLowerCase() });\r\n              }\r\n              break;\r\n            }\r\n            case 2: {\r\n              const [login, ...reason] = line.split(/\\s+/);\r\n              if (!bans.find((x) => x.login === login.toLowerCase())) {\r\n                bans.push({\r\n                  login: login.toLowerCase(),\r\n                  reason: reason ? reason.join(' ') : `Ban-list`\r\n                });\r\n              }\r\n              break;\r\n            }\r\n            case 3: {\r\n              const [id] = line.split(/\\s+/);\r\n              if (!unbans.find((x) => x.id === id)) {\r\n                unbans_id.push({ id: id });\r\n              }\r\n              break;\r\n            }\r\n            case 4: {\r\n              const [id, ...reason] = line.split(/\\s+/);\r\n              if (!bans.find((x) => x.id === id)) {\r\n                bans_id.push({ id: id, reason: reason ? reason.join(' ') : `Ban-list` });\r\n              }\r\n              break;\r\n            }\r\n            default: {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      console.log('Bans', bans, bans.length);\r\n      console.log('Unbans', unbans, unbans.length);\r\n      console.log('Bans (ID)', bans_id, bans_id.length);\r\n      console.log('Unbans (ID)', unbans_id, unbans_id.length);\r\n      console.log('Timeouts', timeouts, timeouts.length);\r\n      console.log('Timeouts (ID)', timeouts_id, timeouts_id.length);\r\n      console.log('Messages', messages, messages.length);\r\n\r\n      await Promise.all([\r\n        banUser(channelID, bans),\r\n        unbanUser(channelID, unbans),\r\n        banUser_id(channelID, bans_id),\r\n        unbanUser_id(channelID, unbans_id),\r\n        timeoutUser(channelID, timeouts),\r\n        timeoutUser_id(channelID, timeouts_id)\r\n      ]);\r\n\r\n      const nick = await getName(JSON.parse(localStorage.getItem('login')).id);\r\n\r\n      if (messages.length) {\r\n        const ws = new WebSocket('wss://irc-ws.chat.twitch.tv');\r\n\r\n        ws.onopen = async () => {\r\n          ws.send('CAP REQ :twitch.tv/membership twitch.tv/tags twitch.tv/commands');\r\n          ws.send('PASS oauth:' + JSON.parse(localStorage.getItem('login')).access_token);\r\n          ws.send('NICK ' + nick);\r\n\r\n          for (let i = 0; i < messages.length; i++) {\r\n            const message = messages[i].message;\r\n            ws.send(`PRIVMSG #${channel.name.toLowerCase()} :${message}`);\r\n            await new Promise((x) => setTimeout(x, sliderValue));\r\n\r\n            if (i === messages.length - 1) {\r\n              ws.close();\r\n            }\r\n          }\r\n        };\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      setOutputData(null);\r\n      setOutputError(err.message);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    setSliderValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <MainCard title=\"Filesay\" description=\"Ban/timeout multiple users in a specific channel.\">\r\n      <Grid container spacing={2} alignItems=\"center\">\r\n        <Grid item xs={12} sm={6}>\r\n          <ThemeProvider theme={darkTheme}>\r\n            <Autocomplete\r\n              options={searchResults}\r\n              getOptionLabel={(option) => option.name}\r\n              onChange={(event, value) => {\r\n                setChannel(value);\r\n              }}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  fullWidth\r\n                  id=\"outlined-basic\"\r\n                  label=\"Channel\"\r\n                  variant=\"outlined\"\r\n                  onChange={(event) => {\r\n                    handleSearchChange(event.target.value);\r\n                  }}\r\n                />\r\n              )}\r\n              renderOption={(props, option) => (\r\n                <li {...props}>\r\n                  <Box display=\"flex\" alignItems=\"center\">\r\n                    <Avatar src={option.avatarUrl} alt={option.name} sx={{ width: 25, height: 25, marginRight: 1 }} />\r\n                    {option.name}\r\n                  </Box>\r\n                </li>\r\n              )}\r\n            />\r\n          </ThemeProvider>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <ThemeProvider theme={darkTheme}>\r\n            <FormControl fullWidth id=\"outlined-basic\" variant=\"outlined\">\r\n              <InputLabel id=\"type-label\">Type</InputLabel>\r\n              <Select\r\n                label=\"Type\"\r\n                value={selectedType}\r\n                onChange={(e) => setSelectedType(e.target.value)}\r\n                labelId=\"type-label\"\r\n                id=\"type-select\"\r\n              >\r\n                <MenuItem value=\"filesay\">Filesay</MenuItem>\r\n                <MenuItem value=\"ban-list-name\">Ban List (Name)</MenuItem>\r\n                <MenuItem value=\"unban-list-name\">Unban List (Name)</MenuItem>\r\n                <MenuItem value=\"ban-list-id\">Ban List (ID)</MenuItem>\r\n                <MenuItem value=\"unban-list-id\">Unban List (ID)</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </ThemeProvider>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ThemeProvider theme={darkTheme}>\r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              rows={10}\r\n              id=\"outlined-basic\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n          </ThemeProvider>\r\n        </Grid>\r\n        <Grid item xs={12} style={{ textAlign: 'right' }}>\r\n          Lines. ({message.split('\\n').length}/500)\r\n        </Grid>\r\n        <ThemeProvider theme={darkTheme}>\r\n          <Grid item xs={12}>\r\n            <Typography gutterBottom>Output speed in ms (Milliseconds)</Typography>\r\n            <FormControl fullWidth variant=\"filled\">\r\n              <Slider\r\n                aria-label=\"Delay\"\r\n                value={sliderValue}\r\n                onChange={handleSliderChange}\r\n                getAriaValueText={valuetext}\r\n                step={null}\r\n                valueLabelDisplay=\"auto\"\r\n                marks={marks}\r\n                min={marks[0].value}\r\n                max={marks[marks.length - 1].value}\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n        </ThemeProvider>\r\n        <Grid item xs={12}>\r\n          <Button variant=\"contained\" fullWidth onClick={handleClick}>\r\n            Send\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {outputError && (\r\n            <Typography variant=\"body2\" style={{ color: 'red', marginTop: '10px', textAlign: 'center' }}>\r\n              {outputError}\r\n            </Typography>\r\n          )}\r\n          {outputData && (\r\n            <Typography variant=\"body2\" style={{ marginTop: '10px', textAlign: 'center' }}>\r\n              {outputData}\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </MainCard>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n"],"names":["testParameter","name","filters","some","filter","RegExp","test","supportedProtocols","Set","normalizeUrl","urlString","options","defaultProtocol","normalizeProtocol","forceHttp","forceHttps","stripAuthentication","stripHash","stripTextFragment","stripWWW","removeQueryParameters","removeTrailingSlash","removeSingleSlash","removeDirectoryIndex","removeExplicitPort","sortQueryParameters","endsWith","trim","normalizeDataURL","_ref","match","exec","Error","type","data","hash","groups","mediaType","split","isBase64","length","pop","mimeType","shift","toLowerCase","normalizedMediaType","map","attribute","key","value","string","Boolean","push","unshift","join","protocol","URL","has","hasCustomProtocol","hasRelativeProtocol","startsWith","replace","urlObject","username","password","pathname","protocolRegex","lastIndex","result","protocolAtIndex","index","slice","decodeURI","Array","isArray","pathComponents","lastComponent","hostname","searchParams","keys","delete","keepQueryParameters","search","sort","decodeURIComponent","port","oldUrlString","toString","stripProtocol","urlRegEx","darkTheme","createTheme","palette","mode","marks","label","valuetext","chunkArray","array","size","i","chunk","Page","message","setMessage","useState","outputData","setOutputData","outputError","setOutputError","selectedType","setSelectedType","channel","setChannel","sliderValue","setSliderValue","searchResults","setSearchResults","async","banUser","channelID","users","Promise","all","response","fetch","login","headers","Authorization","JSON","parse","localStorage","getItem","access_token","client_id","json","ok","error","status","forEach","user","existingUser","find","u","id","method","body","stringify","user_id","reason","x","setTimeout","console","log","timeoutUser","duration","Number","banUser_id","timeoutUser_id","unbanUser","unbanUser_id","useEffect","document","title","_jsx","MainCard","description","children","_jsxs","Grid","container","spacing","alignItems","item","xs","sm","ThemeProvider","theme","Autocomplete","getOptionLabel","option","onChange","event","renderInput","params","TextField","fullWidth","variant","display_name","avatarUrl","thumbnail_url","handleSearchChange","target","renderOption","props","Box","display","Avatar","src","alt","sx","width","height","marginRight","FormControl","InputLabel","Select","e","labelId","MenuItem","multiline","rows","style","textAlign","Typography","gutterBottom","Slider","handleSliderChange","newValue","getAriaValueText","step","valueLabelDisplay","min","max","Button","onClick","text","messages","timeouts","timeouts_id","unbans","bans","unbans_id","bans_id","line","list","listURL","contentType","get","ii","line_","nick","encodeURIComponent","responseType","throwHttpErrors","statusText","getName","ws","WebSocket","onopen","send","close","err","color","marginTop"],"sourceRoot":""}