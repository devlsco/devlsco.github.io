{"version":3,"file":"static/js/221.48e50502.chunk.js","mappings":"6RA2NA,UAtNaA,KACX,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAiBC,IAAsBF,EAAAA,EAAAA,WAAS,IAChDG,EAAkBC,IAAuBJ,EAAAA,EAAAA,WAAS,IAClDK,EAAaC,IAAkBN,EAAAA,EAAAA,WAAS,IACxCO,EAAYC,IAAiBR,EAAAA,EAAAA,UAAS,QACtCS,EAAUC,IAAeV,EAAAA,EAAAA,UAAS,QAClCW,EAAOC,IAAYZ,EAAAA,EAAAA,WAAS,IAC5Ba,EAAeC,IAAoBd,EAAAA,EAAAA,UAAS,IAC7Ce,GAAWC,EAAAA,EAAAA,QAAO,OACjBC,EAAUC,IAAelB,EAAAA,EAAAA,WAAS,IAEzCmB,EAAAA,EAAAA,YAAU,KACRC,SAASC,MAAS,iCAAgC,GACjD,IAEH,MAAMC,EAAQC,EAAAA,YAAiB,SAAeC,EAAOC,GACnD,OAAOC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAACC,UAAW,EAAGH,IAAKA,EAAKI,QAAQ,YAAaL,GAChE,IAEMM,GAAcC,EAAAA,EAAAA,cACjBC,IACCpB,GAAS,GACT,MAAMqB,EAAsBD,EAAIE,MAAM,MAAMC,KAAKC,GAAMA,EAAEC,SAEnDC,EAAO,GAEb,IAAK,IAAIF,EAAI,EAAGA,EAAIH,EAAoBM,OAAQH,IAAK,CACnD,MAAMI,EAAgB,yBAChBC,EAAkBR,EAAoBG,GAAGM,MAAMF,GAErD,IAAKC,EACH,SAGF,MAAME,EAAQF,EACXN,KAAKS,GAOI,IANc,IAAIC,OACvB,IACC1C,EAAoBF,EAAkB6C,EAASF,EAAKG,eAAiBH,EAAQ3C,EAAkB6C,EAASF,GAAQA,aAElH,MAEuBI,aAE1BC,KAAK,IAERX,EAAKY,KAAKP,EACZ,CAEA,MAAMQ,EAASb,EACZH,KAAKC,GACI,GAAE/B,EAAc,mBAAqB,KAAKE,IAAa6B,IAAI3B,MAEpEwC,KAAK,MAERnC,EAAiBqC,EAAO,GAE1B,CAAC9C,EAAaJ,EAAiBE,EAAkBI,EAAYE,IAQzD2C,EAAcA,KAClBlC,GAAY,EAAM,EAOpB,SAAS4B,EAASO,GAChB,MA+BMC,EA/Ba,CACjB,CACEV,KAAM,IACNW,aAAc,CAAC,OAAK,IAAK,IAAK,MAEhC,CACEX,KAAM,IACNW,aAAc,CAAC,SAAK,OAAK,MAE3B,CACEX,KAAM,IACNW,aAAc,CAAC,MAEjB,CACEX,KAAM,IACNW,aAAc,CAAC,IAAK,IAAK,MAE3B,CACEX,KAAM,IACNW,aAAc,CAAC,OAAK,MAEtB,CACEX,KAAM,IACNW,aAAc,CAAC,MAEjB,CACEX,KAAM,IACNW,aAAc,CAAC,UAIKD,MAAMlB,GAAMA,EAAEQ,OAASS,IAE/C,OAAKC,EAEED,EAAIC,EAAKC,aAAaN,KAAK,IAFhBI,CAGpB,CAEA,OA3CAlC,EAAAA,EAAAA,YAAU,KACRW,EAAYhC,EAAQ,GACnB,CAACA,EAASO,EAAaJ,EAAiBE,EAAkB2B,KA0C3DJ,EAAAA,EAAAA,KAAC8B,EAAAA,EAAQ,CAACnC,MAAM,kBAAkBoC,YAAY,wDAAuDC,UACnGhC,EAAAA,EAAAA,KAACiC,EAAAA,EAAU,CAAC9B,QAAQ,QAAO6B,UACzBE,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGC,WAAW,SAAQN,SAAA,EAC7ChC,EAAAA,EAAAA,KAACmC,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAGR,UAChBhC,EAAAA,EAAAA,KAACyC,EAAAA,EAAS,CACRC,WAAS,EACTC,WAAS,EACTC,GAAG,iBACHC,MAAM,UACNC,KAAK,OACL3C,QAAQ,WACR4C,MAAO3E,EACP4E,SAAWC,GAAM5E,EAAW4E,EAAEC,OAAOH,OACrC9D,MAAOA,EACPkE,WAAYlE,EAAQ,yBAA2B,GAC/CI,SAAUA,EACV+D,QAAUC,GAAUjD,EAAYiD,EAAMH,OAAOH,YAGjDb,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,EAAER,SAAA,EACfhC,EAAAA,EAAAA,KAACsD,EAAAA,EAAgB,CACfC,SAASvD,EAAAA,EAAAA,KAACwD,EAAAA,EAAQ,CAACC,QAASlF,EAAiByE,SAAWC,GAAMzE,EAAmByE,EAAEC,OAAOO,SAAUC,gBAAc,IAClHb,MAAM,gBAER7C,EAAAA,EAAAA,KAACsD,EAAAA,EAAgB,CACfC,SAASvD,EAAAA,EAAAA,KAACwD,EAAAA,EAAQ,CAACC,QAAShF,EAAkBuE,SAAWC,GAAMvE,EAAoBuE,EAAEC,OAAOO,SAAUC,gBAAc,IACpHb,MAAM,eAER7C,EAAAA,EAAAA,KAACsD,EAAAA,EAAgB,CACfC,SAASvD,EAAAA,EAAAA,KAACwD,EAAAA,EAAQ,CAACC,QAAS9E,EAAaqE,SAAWC,GAAMrE,EAAeqE,EAAEC,OAAOO,WAClFZ,MAAM,eAGVX,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAGR,SAAA,EAChBhC,EAAAA,EAAAA,KAACyC,EAAAA,EAAS,CACRG,GAAG,2BACHe,GAAI,CAAEC,EAAG,EAAGC,MAAO,QACnBC,WAAY,CACVC,gBAAgB/D,EAAAA,EAAAA,KAACgE,EAAAA,EAAc,CAACC,SAAS,QAAOjC,SAAC,WAEnD7B,QAAQ,WACR+D,aAAc,MACdd,QAAUC,GAAUvE,EAAcuE,EAAMH,OAAOH,UAEjD/C,EAAAA,EAAAA,KAACyC,EAAAA,EAAS,CACRG,GAAG,2BACHe,GAAI,CAAEC,EAAG,EAAGC,MAAO,QACnBC,WAAY,CACVC,gBAAgB/D,EAAAA,EAAAA,KAACgE,EAAAA,EAAc,CAACC,SAAS,QAAOjC,SAAC,SAEnD7B,QAAQ,WACR+D,aAAc,MACdd,QAAUC,GAAUrE,EAAYqE,EAAMH,OAAOH,aAGjD/C,EAAAA,EAAAA,KAACmC,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAGR,SACf7C,IACC+C,EAAAA,EAAAA,MAACiC,EAAAA,EAAG,CACFR,GAAI,CACFS,gBAAiB,uBACjBC,QAAS,QACTC,SAAU,OACVC,WAAY,WACZC,SAAU,OACVC,UAAW,OACXC,aAAc,OACd1C,SAAA,EAEFhC,EAAAA,EAAAA,KAAA,OAAK2E,MAAO,CAAEC,WAAY,MAAOC,OAAQ,GAAI7C,SAC1C7C,EAAcqB,MAAM,MAAMC,KAAI,CAACqE,EAAMC,KACpC7C,EAAAA,EAAAA,MAACrC,EAAAA,SAAc,CAAAmC,SAAA,EACbE,EAAAA,EAAAA,MAAA,QAAMyC,MAAO,CAAEK,YAAa,MAAOJ,WAAY,QAAS5C,SAAA,CAAE+C,EAAQ,EAAE,QACpE/E,EAAAA,EAAAA,KAAA,QAAAgC,SAAO8C,KACP9E,EAAAA,EAAAA,KAAA,WAHmB+E,OAOxB5F,IACC+C,EAAAA,EAAAA,MAAA+C,EAAAA,SAAA,CAAAjD,SAAA,EACEhC,EAAAA,EAAAA,KAACkF,EAAAA,EAAM,CAAC/E,QAAQ,OAAOuC,WAAS,EAACyC,QApI3BC,KACtBC,UAAUC,UAAUC,UAAUpG,GAC9BK,GAAY,EAAK,EAkIyDwC,SAAC,SAG1DzC,IACCS,EAAAA,EAAAA,KAACwF,EAAAA,EAAQ,CAACC,KAAMlG,EAAUmG,iBAAkB,IAAMC,QAASjE,EAAYM,UACrEhC,EAAAA,EAAAA,KAACJ,EAAK,CAAC+F,QAASjE,EAAakE,SAAS,UAAUjC,GAAI,CAAEE,MAAO,QAAS7B,SAAC,yCAYhF,C","sources":["views/generator/regex/index.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport { Typography, TextField, Button, Grid, FormControlLabel, Checkbox, Box, Snackbar, InputAdornment } from '@mui/material';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport MuiAlert from '@mui/material/Alert';\r\n\r\nconst Page = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [lookalikesValue, setLookalikesValue] = useState(true);\r\n  const [toLowerCaseValue, setToLowerCaseValue] = useState(true);\r\n  const [chattyValue, setChattyValue] = useState(false);\r\n  const [startValue, setStartValue] = useState('\\\\b');\r\n  const [endValue, setEndValue] = useState('\\\\b');\r\n  const [error, setError] = useState(false);\r\n  const [outputMessage, setOutputMessage] = useState('');\r\n  const inputRef = useRef(null);\r\n  const [isCopied, setIsCopied] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.title = `LsCo Software - RegEx Generator`;\r\n  }, []);\r\n\r\n  const Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n  });\r\n\r\n  const handleClick = useCallback(\r\n    (msg) => {\r\n      setError(false);\r\n      const trimmedMessageArray = msg.split('\\n').map((i) => i.trim());\r\n\r\n      const list = [];\r\n\r\n      for (let i = 0; i < trimmedMessageArray.length; i++) {\r\n        const filteredRegex = /[a-züäö0-9]/gi;\r\n        const filteredMessage = trimmedMessageArray[i].match(filteredRegex);\r\n\r\n        if (!filteredMessage) {\r\n          continue;\r\n        }\r\n\r\n        const regex = filteredMessage\r\n          .map((char) => {\r\n            const replacerRegex = new RegExp(\r\n              `[${\r\n                toLowerCaseValue ? (lookalikesValue ? replacer(char.toLowerCase()) : char) : lookalikesValue ? replacer(char) : char\r\n              }][\\\\W_]*?`,\r\n              'gi'\r\n            );\r\n            return `(${replacerRegex.source})+`;\r\n          })\r\n          .join('');\r\n\r\n        list.push(regex);\r\n      }\r\n\r\n      const output = list\r\n        .map((i) => {\r\n          return `${chattyValue ? 'config:any regi:' : ''}${startValue}${i}${endValue}`;\r\n        })\r\n        .join('\\n');\r\n\r\n      setOutputMessage(output);\r\n    },\r\n    [chattyValue, lookalikesValue, toLowerCaseValue, startValue, endValue]\r\n  );\r\n\r\n  const handleCopyClick = () => {\r\n    navigator.clipboard.writeText(outputMessage);\r\n    setIsCopied(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsCopied(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleClick(message);\r\n  }, [message, chattyValue, lookalikesValue, toLowerCaseValue, handleClick]);\r\n\r\n  function replacer(x) {\r\n    const lookalikes = [\r\n      {\r\n        char: 'a',\r\n        replacements: ['ä', '@', '4', '%']\r\n      },\r\n      {\r\n        char: 'e',\r\n        replacements: ['€', '³', '3']\r\n      },\r\n      {\r\n        char: 'g',\r\n        replacements: ['9']\r\n      },\r\n      {\r\n        char: 'i',\r\n        replacements: ['|', '1', '!']\r\n      },\r\n      {\r\n        char: 'o',\r\n        replacements: ['ö', '0']\r\n      },\r\n      {\r\n        char: 's',\r\n        replacements: ['$']\r\n      },\r\n      {\r\n        char: 'u',\r\n        replacements: ['ü']\r\n      }\r\n    ];\r\n\r\n    const find = lookalikes.find((i) => i.char === x);\r\n\r\n    if (!find) return x;\r\n\r\n    return x + find.replacements.join('');\r\n  }\r\n\r\n  return (\r\n    <MainCard title=\"RegEx Generator\" description=\"You can create an regular expression for you benefit.\">\r\n      <Typography variant=\"body2\">\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              id=\"standard-basic\"\r\n              label=\"Message\"\r\n              type=\"text\"\r\n              variant=\"standard\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              error={error}\r\n              helperText={error ? 'This field is required' : ''}\r\n              inputRef={inputRef}\r\n              onInput={(event) => handleClick(event.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormControlLabel\r\n              control={<Checkbox checked={lookalikesValue} onChange={(e) => setLookalikesValue(e.target.checked)} defaultChecked />}\r\n              label=\"Lookalikes\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox checked={toLowerCaseValue} onChange={(e) => setToLowerCaseValue(e.target.checked)} defaultChecked />}\r\n              label=\"LowerCase\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox checked={chattyValue} onChange={(e) => setChattyValue(e.target.checked)} />}\r\n              label=\"Chatty\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"outlined-start-adornment\"\r\n              sx={{ m: 1, width: '20ch' }}\r\n              InputProps={{\r\n                startAdornment: <InputAdornment position=\"start\">Start</InputAdornment>\r\n              }}\r\n              variant=\"standard\"\r\n              defaultValue={'\\\\b'}\r\n              onInput={(event) => setStartValue(event.target.value)}\r\n            />\r\n            <TextField\r\n              id=\"outlined-start-adornment\"\r\n              sx={{ m: 1, width: '20ch' }}\r\n              InputProps={{\r\n                startAdornment: <InputAdornment position=\"start\">End</InputAdornment>\r\n              }}\r\n              variant=\"standard\"\r\n              defaultValue={'\\\\b'}\r\n              onInput={(event) => setEndValue(event.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {outputMessage && (\r\n              <Box\r\n                sx={{\r\n                  backgroundColor: 'rgb(250,250,250,0.1)',\r\n                  padding: '2.5px',\r\n                  paddingX: '15px',\r\n                  whiteSpace: 'pre-wrap',\r\n                  maxWidth: '100%',\r\n                  overflowX: 'auto',\r\n                  borderRadius: '5px'\r\n                }}\r\n              >\r\n                <pre style={{ userSelect: 'all', margin: 0 }}>\r\n                  {outputMessage.split('\\n').map((line, index) => (\r\n                    <React.Fragment key={index}>\r\n                      <span style={{ marginRight: '1px', userSelect: 'none' }}>{index + 1}.</span>\r\n                      <span>{line}</span>\r\n                      <br />\r\n                    </React.Fragment>\r\n                  ))}\r\n                </pre>\r\n                {outputMessage && (\r\n                  <>\r\n                    <Button variant=\"text\" fullWidth onClick={handleCopyClick}>\r\n                      Copy\r\n                    </Button>\r\n                    {isCopied && (\r\n                      <Snackbar open={isCopied} autoHideDuration={6000} onClose={handleClose}>\r\n                        <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\r\n                          Copied to clipboard!\r\n                        </Alert>\r\n                      </Snackbar>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </Box>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Typography>\r\n    </MainCard>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n"],"names":["Page","message","setMessage","useState","lookalikesValue","setLookalikesValue","toLowerCaseValue","setToLowerCaseValue","chattyValue","setChattyValue","startValue","setStartValue","endValue","setEndValue","error","setError","outputMessage","setOutputMessage","inputRef","useRef","isCopied","setIsCopied","useEffect","document","title","Alert","React","props","ref","_jsx","MuiAlert","elevation","variant","handleClick","useCallback","msg","trimmedMessageArray","split","map","i","trim","list","length","filteredRegex","filteredMessage","match","regex","char","RegExp","replacer","toLowerCase","source","join","push","output","handleClose","x","find","replacements","MainCard","description","children","Typography","_jsxs","Grid","container","spacing","alignItems","item","xs","TextField","fullWidth","multiline","id","label","type","value","onChange","e","target","helperText","onInput","event","FormControlLabel","control","Checkbox","checked","defaultChecked","sx","m","width","InputProps","startAdornment","InputAdornment","position","defaultValue","Box","backgroundColor","padding","paddingX","whiteSpace","maxWidth","overflowX","borderRadius","style","userSelect","margin","line","index","marginRight","_Fragment","Button","onClick","handleCopyClick","navigator","clipboard","writeText","Snackbar","open","autoHideDuration","onClose","severity"],"sourceRoot":""}